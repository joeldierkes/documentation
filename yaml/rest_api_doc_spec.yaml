info:
  title: Rucio
  version: 1.28.0
openapi: 3.0.2
paths:
  /static/{filename}: {}
  /accountlimits/local/{account}/{rse}:
    post:
      parameters:
      - description: The account for the accountlimit.
        in: path
        name: account
        required: true
        schema:
          type: string
        style: simple
      - description: The rse for the accountlimit.
        in: path
        name: rse
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              properties:
                bytes:
                  description: The new limit in bytes.
                  type: integer
              required:
              - bytes
              type: object
      responses:
        '201':
          content:
            application/json:
              schema:
                enum:
                - Created
                type: string
          description: OK
        '401':
          description: Invalid Auth Token
        '404':
          description: No RSE or account found for the given id.
      summary: Create or update a local accont limit
      tags:
      - Account Limit
    delete:
      parameters:
      - description: The account for the accountlimit.
        in: path
        name: account
        required: true
        schema:
          type: string
        style: simple
      - description: The rse for the accountlimit.
        in: path
        name: rse
        required: true
        schema:
          type: string
        style: simple
      responses:
        '200':
          description: OK
        '401':
          description: Invalid Auth Token
        '404':
          description: No RSE or account found for the given id.
      summary: Delete a local account limit
      tags:
      - Account Limit
  /accountlimits/global/{account}/{rse_expression}:
    post:
      parameters:
      - description: The account for the accountlimit.
        in: path
        name: account
        required: true
        schema:
          type: string
        style: simple
      - description: The rse expression for the accountlimit.
        in: path
        name: rse_expression
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              properties:
                bytes:
                  description: The new limit in bytes.
                  type: integer
              required:
              - bytes
              type: object
      responses:
        '201':
          content:
            application/json:
              schema:
                enum:
                - Created
                type: string
          description: OK
        '401':
          description: Invalid Auth Token
        '404':
          description: No RSE or account found for the given id.
      summary: Create or update a global account limit
      tags:
      - Account Limit
    delete:
      parameters:
      - description: The account for the accountlimit.
        in: path
        name: account
        required: true
        schema:
          type: string
        style: simple
      - description: The rse expression for the accountlimit.
        in: path
        name: rse_expression
        required: true
        schema:
          type: string
        style: simple
      responses:
        '200':
          description: OK
        '401':
          description: Invalid Auth Token
        '404':
          description: No RSE or account found for the given id.
      summary: Delete a global account limit
      tags:
      - Account Limit
  /accounts/{account}/attr/{key}:
    post:
      description: Create an attribute to an account.
      parameters:
      - description: The account identifier.
        in: path
        name: account
        required: true
        schema:
          type: string
        style: simple
      - description: The key of the account attribute.
        in: path
        name: key
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              properties:
                key:
                  description: The key of the attribute. This would override the key
                    defined in path.
                  type: string
                value:
                  description: The value of the attribute.
                  type: string
              required:
              - value
              type: object
      responses:
        '201':
          content:
            application/json:
              schema:
                enum:
                - Created
                type: string
          description: OK
        '401':
          description: Invalid Auth Token
        '404':
          description: No account found for the given id.
        '409':
          description: Attribute already exists
      summary: Create attribute
      tags:
      - Account
    delete:
      description: Delete an attribute of an account.
      parameters:
      - description: The account identifier.
        in: path
        name: account
        required: true
        schema:
          type: string
        style: simple
      - description: The key of the account attribute to remove.
        in: path
        name: key
        required: true
        schema:
          type: string
        style: simple
      responses:
        '200':
          description: OK
        '401':
          description: Invalid Auth Token
        '404':
          description: No account found for the given id.
      summary: Delete attribute
      tags:
      - Account
  /accounts/{account}/scopes/{scope}:
    post:
      description: Creates a scopse with the given name for an account.
      parameters:
      - description: The account identifier.
        in: path
        name: account
        required: true
        schema:
          type: string
        style: simple
      - description: The scope name.
        in: path
        name: scope
        required: true
        schema:
          type: string
        style: simple
      responses:
        '201':
          content:
            application/json:
              schema:
                enum:
                - Created
                type: string
          description: OK
        '400':
          description: Not acceptable
        '401':
          description: Invalid Auth Token
        '404':
          description: No account found.
        '409':
          description: Scope already exists.
      summary: Create scope
      tags:
      - Account
  /accounts/{account}/limits/local/{rse}:
    get:
      description: Get the current local limits for an account on a specific RSE.
      parameters:
      - description: The account identifier.
        in: path
        name: account
        required: true
        schema:
          type: string
        style: simple
      - description: The rse identifier.
        in: path
        name: rse
        required: true
        schema:
          type: string
        style: simple
      responses:
        '200':
          content:
            application/json:
              schema:
                description: Json object with rse identifiers as keys and account
                  limits in bytes as values.
                type: object
          description: OK
        '401':
          description: Invalid Auth Token
        '404':
          description: RSE not found
        '406':
          description: Not Acceptable
      summary: Get local limit
      tags:
      - Account
  /accounts/{account}/limits/global/{rse_expression}:
    get:
      description: Get the current gloabl limits for an account on a specific RSE
        expression.
      parameters:
      - description: The account identifier.
        in: path
        name: account
        required: true
        schema:
          type: string
        style: simple
      - description: The rse identifier.
        in: path
        name: rse_expression
        required: true
        schema:
          type: string
        style: simple
      responses:
        '200':
          content:
            application/json:
              schema:
                description: Json object with rse expression as keys and limits in
                  bytes as values.
                type: object
          description: OK
        '401':
          description: Invalid Auth Token
        '404':
          description: RSE not found
        '406':
          description: Not Acceptable
      summary: Get gloabl limit
      tags:
      - Account
  /accounts/{account}/identities:
    get:
      description: Lists all identities for an account.
      parameters:
      - description: The account identifier.
        in: path
        name: account
        required: true
        schema:
          type: string
        style: simple
      responses:
        '200':
          content:
            application/x-json-stream:
              schema:
                items:
                  items:
                    type: string
                  maxItems: 2
                  minItems: 2
                  type: array
                type: array
          description: OK
        '401':
          description: Invalid Auth Token
        '404':
          description: Account not found
        '406':
          description: Not acceptable
      summary: List identities
      tags:
      - Account
    post:
      description: Grant an account identity access to an account.
      parameters:
      - description: The account identifier.
        in: path
        name: account
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              properties:
                authtype:
                  description: The authtype.
                  type: string
                default:
                  default: false
                  description: Should this be the default account?
                  type: string
                email:
                  description: The email.
                  type: string
                identity:
                  description: The identity.
                  type: string
                password:
                  default: none
                  description: The password.
                  type: string
              required:
              - identity
              - authtype
              - email
              type: object
      responses:
        '201':
          content:
            application/json:
              schema:
                enum:
                - Created
                type: string
          description: OK
        '401':
          description: Invalid Auth Token
        '404':
          description: Account not found
        '409':
          description: Already exists
        '400':
          description: Parameter missing
      summary: Create identity
      tags:
      - Account
    delete:
      description: Delete an account identity.
      parameters:
      - description: The account identifier.
        in: path
        name: account
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              properties:
                authtype:
                  description: The authtype.
                  type: string
                identity:
                  description: The identity.
                  type: string
              required:
              - identity
              - authtype
              type: object
      responses:
        '200':
          description: OK
        '401':
          description: Invalid Auth Token
        '404':
          description: Account or identity not found
      summary: Delete identity
      tags:
      - Account
  /accounts/{account}/rules:
    get:
      description: Lists all rules for an account.
      parameters:
      - description: The account identifier.
        in: path
        name: account
        required: true
        schema:
          type: string
        style: simple
      responses:
        '200':
          content:
            application/x-json-stream:
              schema:
                items:
                  type: string
                type: array
          description: OK
        '401':
          description: Invalid Auth Token
        '404':
          description: Account or rule not found
        '406':
          description: Not acceptable
      summary: List rules
      tags:
      - Account
  /accounts/{account}/usage/history/{rse}:
    get:
      description: Returns the account usage history.
      parameters:
      - description: The account identifier.
        in: path
        name: account
        required: true
        schema:
          type: string
        style: simple
      - description: The rse identifier.
        in: path
        name: rse
        required: true
        schema:
          type: string
        style: simple
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  properties:
                    bytes:
                      description: The number of bytes used.
                      type: integer
                    files:
                      description: The files.
                      type: string
                    updated_at:
                      description: When the data was provided.
                      type: string
                  type: object
                type: array
          description: OK
        '401':
          description: Invalid Auth Token
        '404':
          description: Account not found
        '406':
          description: Not acceptable
      summary: Get account usage history
      tags:
      - Account
  /accounts/{account}/usage/local/{rse}:
    get:
      description: Returns the local account usage.
      parameters:
      - description: The account identifier.
        in: path
        name: account
        required: true
        schema:
          type: string
        style: simple
      - description: The rse identifier.
        in: path
        name: rse
        required: true
        schema:
          type: string
        style: simple
      responses:
        '200':
          content:
            application/x-json-stream:
              schema:
                items:
                  properties:
                    bytes:
                      description: The number of bytes used.
                      type: integer
                    bytes_limit:
                      description: The maximum number of bytes.
                      type: integer
                    bytes_remaining:
                      description: The remaining number of bytes.
                      type: integer
                    rse_id:
                      description: The rse id.
                      type: string
                  type: object
                type: array
          description: OK
        '401':
          description: Invalid Auth Token
        '404':
          description: Account or rse not found
        '406':
          description: Not acceptable
      summary: Get local account usage
      tags:
      - Account
  /accounts/{account}/usage/global/{rse_expression}:
    get:
      description: Returns the local account usage.
      parameters:
      - description: The account identifier.
        in: path
        name: account
        required: true
        schema:
          type: string
        style: simple
      - description: The rse expression.
        in: path
        name: rse_expression
        required: true
        schema:
          type: string
        style: simple
      responses:
        '200':
          content:
            application/x-json-stream:
              schema:
                items:
                  properties:
                    bytes:
                      description: The number of bytes used.
                      type: integer
                    bytes_limit:
                      description: The maximum number of bytes.
                      type: integer
                    bytes_remaining:
                      description: The remaining number of bytes.
                      type: integer
                    rse_expression:
                      description: The rse expression.
                      type: string
                  type: object
                type: array
          description: OK
        '401':
          description: Invalid Auth Token
        '404':
          description: Account or rse not found
        '406':
          description: Not acceptable
      summary: Get local account usage
      tags:
      - Account
  /accounts/{account}:
    get:
      description: Lists all parameters for an account.
      parameters:
      - description: The account identifier.
        in: path
        name: account
        required: true
        schema:
          type: string
        style: simple
      responses:
        '201':
          content:
            application/json:
              schema:
                properties:
                  account:
                    description: The account identifier.
                    type: string
                  account_type:
                    description: The account type.
                    type: string
                  deleted_at:
                    description: Datetime if the account was deleted.
                    type: string
                  email:
                    description: The email for the account.
                    type: string
                  status:
                    description: The account status.
                    type: string
                  suspended_at:
                    description: Datetime if the account was suspended.
                    type: string
                type: object
          description: OK
        '401':
          description: Invalid Auth Token
        '404':
          description: No account found.
        '406':
          description: Not acceptable
      summary: List account parameters
      tags:
      - Account
    post:
      description: Create an account.
      parameters:
      - description: The account identifier.
        in: path
        name: account
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              properties:
                email:
                  description: The email for the account.
                  type: string
                type:
                  description: The account type.
                  enum:
                  - USER
                  - GROUP
                  - SERVICE
                  type: string
              required:
              - type
              - email
              type: object
      responses:
        '201':
          content:
            application/json:
              schema:
                enum:
                - Created
                type: string
          description: OK
        '401':
          description: Invalid Auth Token
        '409':
          description: Account already exists
        '400':
          description: Unknown status
      summary: Create
      tags:
      - Account
    delete:
      description: Delete an account.
      parameters:
      - description: The account identifier.
        in: path
        name: account
        required: true
        schema:
          type: string
        style: simple
      responses:
        '201':
          description: OK
        '401':
          description: Invalid Auth Token
        '404':
          description: Account not found
      summary: Delete
      tags:
      - Account
    put:
      description: Update a parameter for an account.
      parameters:
      - description: The account identifier.
        in: path
        name: account
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              description: Json object with key-value pairs corresponding to the new
                values of the parameters.
              type: object
      responses:
        '200':
          description: OK
        '401':
          description: Invalid Auth Token
        '404':
          description: No account found.
        '400':
          description: Unknown status
      summary: Update
      tags:
      - Account
  /accounts:
    get:
      description: List all accounts.
      responses:
        '200':
          content:
            application/x-json-stream:
              schema:
                items:
                  properties:
                    account:
                      description: The account identifier.
                      type: string
                    email:
                      description: The email.
                      type: string
                    type:
                      description: The type.
                      type: string
                  type: object
                type: array
          description: OK
      summary: List
      tags:
      - Account
  /config/{section}/{option}/{value}:
    put:
      description: Create or set the value of an option.
      parameters:
      - description: The section.
        in: path
        name: section
        required: true
        schema:
          type: string
        style: simple
      - description: The option of the section.
        in: path
        name: option
        required: true
        schema:
          type: string
        style: simple
      - description: The value to set.
        in: path
        name: value
        required: true
        schema:
          type: string
        style: simple
      responses:
        '201':
          content:
            application/json:
              schema:
                enum:
                - Created
                type: string
          description: OK
        '401':
          description: Invalid Auth Token
        '500':
          content:
            application/json:
              schema:
                enum:
                - Could not set value {} for section {} option {}
                type: string
          description: Value could not be set
      summary: Create value
      tags:
      - Config
  /config/{section}/{option}:
    get:
      description: Returns the value of an option
      parameters:
      - description: The section.
        in: path
        name: section
        required: true
        schema:
          type: string
        style: simple
      - description: The option of the section.
        in: path
        name: option
        required: true
        schema:
          type: string
        style: simple
      responses:
        '200':
          content:
            application/json:
              schema:
                description: The value of the option
                type: string
          description: OK
        '401':
          description: Invalid Auth Token
        '404':
          description: Config not found
        '406':
          description: Not acceptable
      summary: Get option
      tags:
      - Config
    delete:
      description: Delete an option of a section.
      parameters:
      - description: The section.
        in: path
        name: section
        required: true
        schema:
          type: string
        style: simple
      - description: The option of the section.
        in: path
        name: option
        required: true
        schema:
          type: string
        style: simple
      responses:
        '200':
          description: OK
        '401':
          description: Invalid Auth Token
      summary: Delete option
      tags:
      - Config
  /config/{section}:
    get:
      parameters:
      - description: The section to return.
        in: path
        name: section
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              properties:
                bytes:
                  description: The new limit in bytes.
                  type: integer
              required:
              - bytes
              type: object
      responses:
        '200':
          content:
            application/json:
              schema:
                description: Dictionary of section options.
                type: object
          description: OK
        '401':
          description: Invalid Auth Token
        '404':
          description: Config not found
        '406':
          description: Not acceptable
      summary: List Sections
      tags:
      - Config
  /config:
    get:
      description: List the full configuration.
      responses:
        '200':
          content:
            application/json:
              schema:
                description: A dict with the sections as keys and a dict with the
                  configuration as value.
                type: object
          description: OK
        '401':
          description: Invalid Auth Token
        '406':
          description: Not acceptable
      summary: List
      tags:
      - Config
    post:
      description: Create or set the configuration option in the requested section.
      requestBody:
        content:
          application/json:
            schema:
              description: 'The request body is expected to contain a json {''section'':
                {''option'': ''value''}}.'
              type: object
      responses:
        '201':
          content:
            application/json:
              schema:
                enum:
                - Created
                type: string
          description: OK
        '401':
          description: Invalid Auth Token
        '400':
          description: The input data was incomplete or invalid
        '500':
          description: Configuration error
      summary: Create
      tags:
      - Config
  /credentials/signurl:
    get:
      description: Sign a url for a limited lifetime for a particular srevice.
      parameters:
      - description: The RSE to authenticate against.
        in: query
        name: rse
        required: true
        schema:
          type: string
      - description: The lifetime, default 600s.
        in: query
        name: lifetime
        required: false
        schema:
          type: string
      - description: The service, default gcs.
        in: query
        name: svc
        required: false
        schema:
          type: string
      - description: The operation.
        in: query
        name: op
        required: false
        schema:
          type: string
      - description: The Url of the authentification.
        in: query
        name: url
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/octet-stream:
            schema:
              properties:
                X-Rucio-Account:
                  description: Account identifier.
                  type: string
                X-Rucio-AppID:
                  description: Application identifier.
                  type: string
                X-Rucio-VO:
                  description: VO name (Multi-VO only).
                  type: string
              type: object
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  description: An account attribute.
                  properties:
                    key:
                      description: The key of the account attribute.
                      type: string
                    value:
                      description: The value of the account attribute.
                      type: string
                  type: object
                type: array
          description: OK
        '401':
          description: Invalid Auth Token
        '400':
          description: bad request, no rse or url found.
        '406':
          description: Not acceptable.
      summary: Sign URL
      tags:
      - Credentials
    options: {}
  /dids/{scope}/:
    get:
      description: Return all data identifiers in the given scope.
      parameters:
      - description: The scope.
        in: path
        name: scope
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              properties:
                name:
                  description: The name of the did.
                  type: string
                recursive:
                  description: If specified, also returns the child ids recursively.
                  type: boolean
              type: object
      responses:
        '200':
          content:
            application/x-json-stream:
              schema:
                description: Line seperated dictionary of dids.
                items:
                  description: Data identifier
                  properties:
                    level:
                      description: The level of the did.
                      type: integer
                    name:
                      description: The name of the did.
                      type: string
                    parent:
                      description: The parent of the did.
                      type: string
                    scope:
                      description: The scope of the did.
                      type: string
                    type:
                      description: The type of the did.
                      enum:
                      - F
                      - D
                      - C
                      - A
                      - X
                      - Y
                      - Z
                      type: string
                  type: object
                type: array
          description: OK
        '401':
          description: Invalid Auth Token
        '404':
          description: No Dids found
        '406':
          description: Not acceptable
      summary: Get Data Identifier
      tags:
      - Data Identifiers
  /dids/{guid}/guid:
    get:
      description: Returns the dataset associated with a GUID.
      parameters:
      - description: The GUID to query buy.
        in: path
        name: guid
        required: true
        schema:
          type: string
        style: simple
      responses:
        '200':
          content:
            application/x-json-stream:
              schema:
                description: A list of all datasets associated with the guid. Items
                  are seperated by new line character.
                items:
                  description: A dataset associated with a guid.
                  properties:
                    name:
                      description: The name of the dataset.
                      type: string
                    scope:
                      description: The scope of the dataset.
                      type: string
                  type: object
                type: array
          description: OK
        '401':
          description: Invalid Auth Token
        '404':
          description: Did not found
        '406':
          description: Not acceptable
      summary: Get dataset
      tags:
      - Data Identifiers
  /dids/{scope}/dids/search:
    get:
      description: List all data identifiers in a scope which match a given metadata.
      parameters:
      - description: The scope of the data identifiers.
        in: path
        name: scope
        required: true
        schema:
          type: string
        style: simple
      - description: The did type to search for.
        in: query
        name: type
        schema:
          default: collection
          enum:
          - all
          - collection
          - container
          - dataset
          - file
          type: string
      - description: The maximum number od dids returned.
        in: query
        name: limit
        schema:
          type: integer
      - description: Provides a longer output, otherwise just prints names.
        in: query
        name: long
        schema:
          default: false
          type: boolean
      - description: Recursively list chilred.
        in: query
        name: recursive
        schema:
          type: boolean
      - description: Date string in RFC-1123 format where the creation date was earlier.
        in: query
        name: created_before
        schema:
          type: string
      - description: Date string in RFC-1123 format where the creation date was later.
        in: query
        name: created_after
        schema:
          type: string
      - description: Exact number of attached DIDs.
        in: query
        name: length
        schema:
          type: integer
      - description: Number of attached DIDs greater than.
        in: query
        name: length.gt
        schema:
          type: integer
      - description: Number of attached DIDs less than.
        in: query
        name: length.lt
        schema:
          type: integer
      - description: Number of attached DIDs greater than or equal to
        in: query
        name: length.gte
        schema:
          type: integer
      - description: Number of attached DIDs less than or equal to.
        in: query
        name: length.lte
        schema:
          type: integer
      - description: Name or pattern of a did.
        in: query
        name: name
        schema:
          type: string
      responses:
        '200':
          content:
            application/x-json-stream:
              schema:
                description: Line separated name of DIDs or dictionaries of DIDs for
                  long option.
                items:
                  description: the name of a DID or a dictionarie of a DID for long
                    option.
                  type: object
                type: array
          description: OK
        '401':
          description: Invalid Auth Token
        '404':
          description: Invalid key in filter.
        '406':
          description: Not acceptable
        '409':
          description: Wrong did type
      summary: List Data identifier
      tags:
      - Data Identifiers
  /dids/{scope}/dids/search_extended:
    get:
      description: List all data identifiers in a scope which match a given metadata.
        Extended Version to included meteadata from various plugins.
      parameters:
      - description: The scope of the data identifiers.
        in: path
        name: scope
        required: true
        schema:
          type: string
        style: simple
      - description: The did type to search for.
        in: query
        name: type
        schema:
          default: collection
          enum:
          - all
          - collection
          - container
          - dataset
          - file
          type: string
      - description: The maximum number od dids returned.
        in: query
        name: limit
        schema:
          type: integer
      - description: Provides a longer output, otherwise just prints names.
        in: query
        name: long
        schema:
          default: false
          type: boolean
      - description: Recursively list chilred.
        in: query
        name: recursive
        schema:
          type: boolean
      - description: Date string in RFC-1123 format where the creation date was earlier.
        in: query
        name: created_before
        schema:
          type: string
      - description: Date string in RFC-1123 format where the creation date was later.
        in: query
        name: created_after
        schema:
          type: string
      - description: Exact number of attached DIDs.
        in: query
        name: length
        schema:
          type: integer
      - description: Number of attached DIDs greater than.
        in: query
        name: length.gt
        schema:
          type: integer
      - description: Number of attached DIDs less than.
        in: query
        name: length.lt
        schema:
          type: integer
      - description: Number of attached DIDs greater than or equal to
        in: query
        name: length.gte
        schema:
          type: integer
      - description: Number of attached DIDs less than or equal to.
        in: query
        name: length.lte
        schema:
          type: integer
      - description: Name or pattern of a did.
        in: query
        name: name
        schema:
          type: string
      responses:
        '200':
          content:
            application/x-json-stream:
              schema:
                description: Line separated name of DIDs or dictionaries of DIDs for
                  long option.
                items:
                  description: the name of a DID or a dictionarie of a DID for long
                    option.
                  type: object
                type: array
          description: OK
        '401':
          description: Invalid Auth Token
        '404':
          description: Invalid key in filter.
        '406':
          description: Not acceptable
        '409':
          description: Wrong did type
      summary: List Data identifier with plugin metadata
      tags:
      - Data Identifiers
  /dids/{scope_name}/status:
    put:
      description: Update a did.
      parameters:
      - description: The scope and the name of the did.
        in: path
        name: scope_name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              properties:
                open:
                  description: The open status
                  type: boolean
              type: object
      responses:
        '200':
          description: OK
        '401':
          description: Invalid Auth Token
        '404':
          description: Did not found
        '409':
          description: Wrong status
      summary: Update did
      tags:
      - Data Identifiers
  /dids/{scope_name}/files:
    get:
      description: List all replicas for a did.
      parameters:
      - description: The scope and the name of the did.
        in: path
        name: scope_name
        required: true
        schema:
          type: string
        style: simple
      - description: Flag to trigger long output.
        in: query
        name: long
        required: false
        schema:
          type: object
      responses:
        '200':
          content:
            application/x-json-stream:
              schema:
                oneOf:
                - description: All replica information if `long` is defined.
                  items:
                    properties:
                      adler32:
                        description: The adler32 checksum.
                        type: string
                      bytes:
                        description: The size of the did in bytes.
                        type: integer
                      events:
                        description: The number of events of the did.
                        type: integer
                      guid:
                        description: The guid of the did.
                        type: string
                      lumiblocknr:
                        description: The lumi block nr. Only availabe if `long` is
                          defined in the query.
                        type: integer
                      name:
                        description: The name of the did.
                        type: string
                      scope:
                        description: The scope of the did.
                        type: string
                    type: object
                  type: array
                - description: All replica information.
                  items:
                    properties:
                      adler32:
                        description: The adler32 checksum.
                        type: string
                      bytes:
                        description: The size of the did in bytes.
                        type: integer
                      events:
                        description: The number of events of the did.
                        type: integer
                      guid:
                        description: The guid of the did.
                        type: string
                      name:
                        description: The name of the did.
                        type: string
                      scope:
                        description: The scope of the did.
                        type: string
                    type: object
                  type: array
          description: OK
        '401':
          description: Invalid Auth Token
        '404':
          description: Did not found
        '406':
          description: Not acceptable
      summary: Get replicas
      tags:
      - Data Identifiers
  /dids/{scope_name}/dids/history:
    get:
      description: Returns the content history of a data identifier.
      parameters:
      - description: The scope and the name of the did.
        in: path
        name: scope_name
        required: true
        schema:
          type: string
        style: simple
      responses:
        '200':
          content:
            application/x-json-stream:
              schema:
                description: The dids with their information and history. Elements
                  are seperated by new line characters.
                items:
                  description: A single did with history data.
                  properties:
                    adler32:
                      description: The abler32 sha checksum.
                      type: string
                    bytes:
                      description: The size of the did in bytes.
                      type: integer
                    created_at:
                      description: The created_at date time.
                      type: string
                    deleted_at:
                      description: The deleted_at date time.
                      type: string
                    md5:
                      description: The md5 checksum.
                      type: string
                    name:
                      description: The name of the did.
                      type: string
                    scope:
                      description: The scope of the did.
                      type: string
                    type:
                      description: The type of the did.
                      type: string
                    updated_at:
                      description: The last time the did was updated.
                      type: string
                  type: object
                type: array
          description: Did found
        '401':
          description: Invalid Auth Token
        '404':
          description: Did not found
        '406':
          description: Not acceptable
      summary: Get history
      tags:
      - Data Identifiers
  /dids/{scope_name}/dids:
    get:
      description: Returns the contents of a data identifier.
      parameters:
      - description: The scope and the name of the did.
        in: path
        name: scope_name
        required: true
        schema:
          type: string
        style: simple
      responses:
        '200':
          content:
            application/x-json-stream:
              schema:
                description: The contents of a did. Items are line seperated.
                items:
                  properties:
                    adler32:
                      description: The adler32 checksum of the did.
                      type: string
                    bytes:
                      description: The size of the did.
                      type: number
                    md5:
                      description: The md5 checksum of the did.
                      type: string
                    name:
                      description: The name of the did.
                      type: string
                    scope:
                      description: The scope of the did.
                      type: string
                    type:
                      description: The type of the did.
                      type: string
                  required:
                  - scope
                  - name
                  - type
                  - bytes
                  - adler32
                  - md5
                  type: object
                type: array
          description: Did found
        '401':
          description: Invalid Auth Token
        '404':
          description: Scope not found
        '406':
          description: Not acceptable
      summary: Get did
      tags:
      - Data Identifiers
    post:
      description: Append data identifiers to data identifiers.
      parameters:
      - description: The scope and the name of the did.
        in: path
        name: scope_name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              properties:
                account:
                  description: The account which attaches the dids.
                  type: string
                dids:
                  description: The dids to attach.
                  properties:
                    account:
                      description: The account attaching the did.
                      type: string
                    name:
                      description: The name of the did.
                      type: string
                    scope:
                      description: The scope of the did.
                      type: string
                  type: object
                rse:
                  description: The name of the rse.
                  type: string
              required:
              - dids
              type: object
      responses:
        '201':
          content:
            application/json:
              schema:
                enum:
                - Created
                type: string
          description: OK
        '401':
          description: Invalid Auth Token
        '404':
          description: Did not found
        '406':
          description: Not acceptable
        '409':
          description: Already attached
      summary: Add dids to did
      tags:
      - Data Identifiers
    delete:
      description: Detach data identifiers from data identifiers.
      parameters:
      - description: The scope and the name of the did.
        in: path
        name: scope_name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              properties:
                dids:
                  description: The dids to detach.
                  items:
                    properties:
                      name:
                        description: The name of the did.
                        type: string
                      scope:
                        description: The scope of the did.
                        type: string
                    type: object
                  type: array
              required:
              - dids
              type: object
      responses:
        '200':
          description: OK
        '401':
          description: Invalid Auth Token
        '404':
          description: Did not found
      summary: Detach dids from did
      tags:
      - Data Identifiers
  /dids/{scope_name}/meta:
    get:
      description: Get the metadata of a did.
      parameters:
      - description: The scope and the name of the did.
        in: path
        name: scope_name
        required: true
        schema:
          type: string
        style: simple
      - default: DID_COLUMN
        description: The plugin to use.
        in: query
        name: plugin
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                description: A data identifer with all attributes.
                type: object
          description: OK
        '401':
          description: Invalid Auth Token
        '404':
          description: Did not found
        '406':
          description: Not acceptable
      summary: Get metadata
      tags:
      - Data Identifiers
    post:
      description: Add metadata to a did.
      parameters:
      - description: The scope and the name of the did.
        in: path
        name: scope_name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              properties:
                meta:
                  description: The metadata to add. A dictionary containg the metadata
                    name as key and the value as value.
                  type: object
                recursive:
                  default: false
                  description: Flag if the metadata should be applied recirsively
                    to children.
                  type: boolean
              required:
              - meta
              type: null
      responses:
        '201':
          content:
            application/json:
              schema:
                enum:
                - Created
                type: string
          description: Created
        '401':
          description: Invalid Auth Token
        '404':
          description: Not found
        '406':
          description: Not acceptable
      summary: Add metadata
      tags:
      - Data Identifiers
    delete:
      description: Deletes the specified metadata from the did.
      parameters:
      - description: The scope and the name of the did.
        in: path
        name: scope_name
        required: true
        schema:
          type: string
        style: simple
      - description: The key to delete.
        in: query
        name: key
        schema:
          type: string
      responses:
        '200':
          description: OK
        '400':
          description: scope_name could not be parsed.
        '401':
          description: Invalid Auth Token
        '404':
          description: Did or key not found
        '406':
          description: Not acceptable
        '409':
          description: Feature is not in current database.
      summary: Delete metadata
      tags:
      - Data Identifiers
  /dids/{scope_name}/meta/{key}:
    post:
      description: Add metadata to a did.
      parameters:
      - description: The scope and the name of the did.
        in: path
        name: scope_name
        required: true
        schema:
          type: string
        style: simple
      - description: The key for the metadata.
        in: path
        name: key
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              properties:
                value:
                  description: The value to set.
                  type: AnyValue
              required:
              - value
              type: null
      responses:
        '201':
          content:
            application/json:
              schema:
                enum:
                - Created
                type: string
          description: Created
        '401':
          description: Invalid Auth Token
        '404':
          description: Did not found
        '406':
          description: Not acceptable
        '409':
          description: Matadata already exists
        '400':
          description: Invalid key or value
      summary: Add metadata
      tags:
      - Data Identifiers
  /dids/bulkdidsmeta:
    post:
      description: Adds metadata in a bulk.
      requestBody:
        content:
          application/json:
            schema:
              properties:
                dids:
                  description: A list with all the dids and the metadata.
                  items:
                    description: The did and associated metadata.
                    properties:
                      meta:
                        description: The metadata to add. A dictionary with the meta
                          key as key and the value as value.
                        type: object
                      name:
                        description: The name of the did.
                        type: string
                      scope:
                        description: The scope of the did.
                        type: string
                    type: object
                  type: array
              required:
              - dids
              type: object
      responses:
        '200':
          content:
            application/json:
              schema:
                enum:
                - Created
                type: string
          description: Created
        '401':
          description: Invalid Auth Token
        '404':
          description: Did not found
        '406':
          description: Not acceptable
        '409':
          description: Unsupported Operation
      summary: Add metadata bulk
      tags:
      - Data Identifiers
  /dids/{scope_name}/rules:
    get:
      description: Lists all rules of a given did.
      parameters:
      - description: The scope and the name of the did.
        in: path
        name: scope_name
        required: true
        schema:
          type: string
        style: simple
      responses:
        '200':
          content:
            application/x-json-stream:
              schema:
                description: The rules associated with a did.
                items:
                  description: A rule.
                  type: object
                type: array
          description: The rules associated with a did.
        '401':
          description: Invalid Auth Token
        '404':
          description: Did or rule not found
        '406':
          description: Not acceptable
      summary: Get rules
      tags:
      - Data Identifiers
  /dids/{scope_name}/parents:
    get:
      description: Lists all parents of the did.
      parameters:
      - description: The scope and the name of the did.
        in: path
        name: scope_name
        required: true
        schema:
          type: string
        style: simple
      responses:
        '200':
          content:
            application/x-json-stream:
              schema:
                description: The parents of the did.
                items:
                  description: A parent of the did.
                  properties:
                    name:
                      description: The name of the did.
                      type: string
                    scope:
                      description: The scope of the did.
                      type: string
                    type:
                      description: The type of the did.
                      type: string
                  type: object
                type: array
          description: OK
        '401':
          description: Invalid Auth Token
        '404':
          description: Did not found
        '406':
          description: Not acceptable
      summary: Get Parents
      tags:
      - Data Identifiers
  /dids/{scope_name}/associated_rules:
    get:
      description: Gets all associated rules for a file.
      parameters:
      - description: The scope and the name of the did.
        in: path
        name: scope_name
        required: true
        schema:
          type: string
        style: simple
      responses:
        '200':
          content:
            application/x-json-stream:
              schema:
                description: All associated rules for a file. Items are seperated
                  by new line character.
                items:
                  description: A replication rule associated with the file. Has more
                    fields than listed here.
                  properties:
                    account:
                      description: The account associated with the rule.
                      type: string
                    id:
                      description: The id of the rule.
                      type: string
                    name:
                      description: The name of the rule.
                      type: string
                    rse_expression:
                      description: The rse expression of the rule.
                      type: string
                    scope:
                      description: The scope associated with the rule.
                      type: string
                    state:
                      description: The state of the rule.
                      type: string
                    subscription_id:
                      description: The subscription id of the rule.
                      type: string
                  type: object
                type: array
          description: OK
        '401':
          description: Invalid Auth Token
        '404':
          description: Did not found
        '406':
          description: Not acceptable
      summary: Get accociated rules
      tags:
      - Data Identifiers
  /dids/{scope_name}/follow:
    get:
      description: Get all followers for a specific did.
      parameters:
      - description: The scope and the name of the did.
        in: path
        name: scope_name
        required: true
        schema:
          type: string
        style: simple
      responses:
        '200':
          content:
            application/json:
              schema:
                description: A list of all followers of a did.
                items:
                  description: A follower of a did.
                  properties:
                    user:
                      description: The user which follows the did.
                      type: string
                  type: object
                type: array
          description: OK
        '400':
          description: Value error
        '401':
          description: Invalid Auth Token
        '404':
          description: Did not found
        '406':
          description: Not acceptable
      summary: Get followers
      tags:
      - Data Identifiers
    post:
      description: Mark the input DID as being followed by the given account.
      parameters:
      - description: The scope and the name of the did.
        in: path
        name: scope_name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              properties:
                account:
                  description: The account to follow the did.
                  type: string
              required:
              - account
              type: object
      responses:
        '201':
          description: OK
        '400':
          description: Scope or name could not be interpreted
        '401':
          description: Invalid Auth Token
        '404':
          description: Not found
        '500':
          description: Internal error
      summary: Post follow
      tags:
      - Data Identifiers
    delete:
      description: Mark the input DID as not followed
      parameters:
      - description: The scope and the name of the did.
        in: path
        name: scope_name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              properties:
                account:
                  description: The account to unfollow the did.
                  type: string
              required:
              - account
              type: null
      responses:
        '200':
          description: OK
        '401':
          description: Invalid Auth Token
        '404':
          description: Not found
        '500':
          description: Internal error
      summary: Delete follow
      tags:
      - Data Identifiers
  /dids:
    post:
      description: Add new Dids in bulk.
      requestBody:
        content:
          application/json:
            schema:
              items:
                description: One did to add.
                properties:
                  account:
                    description: The account associated with the did.
                    type: string
                  name:
                    description: The did name.
                    type: string
                  scope:
                    description: The did scope.
                    type: string
                  statuses:
                    description: The monotonic status
                    type: string
                  type:
                    description: The type of the did.
                    enum:
                    - F
                    - D
                    - C
                    - A
                    - X
                    - Y
                    - Z
                    type: string
                required:
                - scope
                - name
                - type
                type: object
              type: array
      responses:
        '201':
          content:
            application/json:
              schema:
                enum:
                - Created
                type: string
          description: OK
        '401':
          description: Invalid Auth Token
        '406':
          description: Not acceptable
        '409':
          description: Did already exists
      summary: Add Dids bulk
      tags:
      - Data Identifiers
  /dids/{input_scope}/{input_name}/{output_scope}/{output_name}/{nbfiles}/sample:
    post:
      description: Creates a sample from an input collection.
      parameters:
      - description: The input scope.
        in: path
        name: input_scope
        required: true
        schema:
          type: string
        style: simple
      - description: The input name.
        in: path
        name: input_name
        required: true
        schema:
          type: string
        style: simple
      - description: The output scope.
        in: path
        name: output_scope
        required: true
        schema:
          type: string
        style: simple
      - description: The output name.
        in: path
        name: output_name
        required: true
        schema:
          type: string
        style: simple
      - description: The number of files to register in the output dataset.
        in: path
        name: nbfiles
        required: true
        schema:
          type: string
        style: simple
      responses:
        '201':
          content:
            application/json:
              schema:
                enum:
                - Created
                type: string
          description: OK
        '401':
          description: Invalid Auth Token
        '404':
          description: Not found
        '406':
          description: Not acceptable
        '409':
          description: Duplication
      summary: Create sample
      tags:
      - Data Identifiers
  /dids/attachments:
    post:
      description: Attaches a did to another did
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
              - description: An array containing all dids. Duplicates are not ignored.
                properties:
                  dids:
                    description: The dids associated to the did.
                    items:
                      description: A did.
                      properties:
                        name:
                          description: The name of the did.
                          type: string
                        scope:
                          description: The scope of the did.
                          type: string
                      required:
                      - scope
                      - name
                      type: object
                    type: array
                  name:
                    description: The name of the did.
                    type: string
                  rse_id:
                    description: The rse id of the did.
                    type: string
                  scope:
                    description: The scope of the did.
                    type: string
                required:
                - scope
                - name
                - dids
                type: array
              - properties:
                  attachments:
                    description: An array containing all dids. Duplicates are not
                      ignored.
                    properties:
                      dids:
                        description: The dids associated to the did.
                        items:
                          description: A did.
                          properties:
                            name:
                              description: The name of the did.
                              type: string
                            scope:
                              description: The scope of the did.
                              type: string
                          required:
                          - scope
                          - name
                          type: object
                        type: array
                      name:
                        description: The name of the did.
                        type: string
                      rse_id:
                        description: The rse id of the did.
                        type: string
                      scope:
                        description: The scope of the did.
                        type: string
                    required:
                    - scope
                    - name
                    - dids
                    type: array
                  ignore_duplicates:
                    default: false
                    description: If duplicates should be ignored.
                    type: boolean
                required:
                - attachments
                type: object
      responses:
        '200':
          content:
            application/json:
              schema:
                enum:
                - Created
                type: string
          description: OK
        '401':
          description: Invalid Auth Token
        '404':
          description: Not found
        '406':
          description: Not acceptable
      summary: Attach did to did
      tags:
      - Data Identifiers
  /dids/new:
    get:
      description: Returns a list of recent identifiers.
      parameters:
      - description: The type of the did.
        in: query
        name: type
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/x-json-stream:
              schema:
                description: A list of the recent dids. Items are seperated by new
                  line characters.
                items:
                  description: A did.
                  properties:
                    did_type:
                      description: The type of the did.
                      type: string
                    name:
                      description: The name of the did.
                      type: string
                    scope:
                      description: The scope of the did.
                      type: string
                  type: object
                type: array
          description: OK
        '401':
          description: Invalid Auth Token
        '406':
          description: Not acceptable
      summary: Get recent identifiers
      tags:
      - Data Identifiers
  /dids/resurrect:
    post:
      description: Resurrect all given dids.
      requestBody:
        content:
          application/json:
            schema:
              description: List of did to resurrect.
              items:
                description: A did to resurrect.
                properties:
                  name:
                    description: The name of the did
                    type: string
                  scope:
                    description: The scope of the did.
                    type: string
                type: object
              type: array
      responses:
        '201':
          content:
            application/json:
              schema:
                enum:
                - Created
                type: string
          description: OK
        '401':
          description: Invalid Auth Token
        '404':
          description: Not found
        '409':
          description: Conflict
        '500':
          description: Internal error
      summary: Resurrect dids
      tags:
      - Data Identifiers
  /dids/bulkmeta:
    post:
      description: List all metadata of a list of data identifiers.
      requestBody:
        content:
          application/x-json-stream:
            schema:
              properties:
                dids:
                  description: The dids.
                  items:
                    description: A did.
                    properties:
                      name:
                        description: The name of the did.
                        type: string
                      scope:
                        description: The scope of the did.
                        type: string
                    type: object
                  type: array
                inherit:
                  default: false
                  description: Concatenated the metadata of the parent if set to true.
                  type: boolean
              required:
              - dids
              type: null
      responses:
        '200':
          content:
            application/json:
              schema:
                description: A list of metadata identifiers for the dids. Seperated
                  by new lines.
                items:
                  description: The metadata for one did.
                  type: object
                type: array
          description: OK
        '400':
          description: Cannot decode json parameter list
        '401':
          description: Invalid Auth Token
        '404':
          description: Did not found
        '406':
          description: Not acceptable
      summary: Get metadata bulk
      tags:
      - Data Identifiers
  /dirac/addfiles:
    post:
      description: 'Atomic method used by the RucioFileCatalog plugin in Dirac that:

        - Creates files and their replicas

        - Creates the dataset containing the files and attach the files to the dataset

        - Creates a rule on the dataset with RSE expression ANY and grouping NONE

        - Creates all the container hierarchy containing the dataset

        '
      requestBody:
        content:
          application/json:
            schema:
              properties:
                ignore_availability:
                  description: If the availability should be ignored.
                  type: boolean
                lfns:
                  description: 'List of lfn (dictionary {''lfn'': <lfn>, ''rse'':
                    <rse>, ''bytes'': <bytes>, ''adler32'': <adler32>, ''guid'': <guid>,
                    ''pfn'': <pfn>}.'
                  items:
                    type: object
                  type: array
              required:
              - lfns
              type: object
      responses:
        '201':
          content:
            application/json:
              schema:
                enum:
                - Created
                type: string
          description: OK
        '400':
          description: Cannot decode json parameter list.
        '401':
          description: Invalid Auth Token
        '404':
          description: DID not found
        '405':
          description: Unsupported Operation
        '409':
          description: Duplicate
        '503':
          description: Temporary error.
      summary: Add files
      tags:
      - Dirac
  /export:
    get:
      description: Export data from rucio.
      parameters:
      - description: Should the distance be enabled?
        in: query
        name: distance
        required: false
        schema:
          type: boolean
      responses:
        '200':
          content:
            application/json:
              schema:
                description: Dictionary with rucio data.
                type: object
          description: OK
        '401':
          description: Invalid Auth Token
        '406':
          description: Not acceptable
      summary: Export data
      tags:
      - Export
  /heartbeats:
    get:
      description: List all heartbeats.
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  description: List of tuples [('Executable', 'Hostname', ...), ...]
                  type: object
                type: array
          description: OK
        '401':
          description: Invalid Auth Token
        '406':
          description: Not acceptable
      summary: List
      tags:
      - Heartbeat
    post:
      requestBody:
        content:
          application/json:
            shema:
              properties:
                executable:
                  description: Name of the executable.
                  type: string
                hostname:
                  description: Name of the host.
                  type: string
                older_than:
                  description: Ignore specified heartbeats older than specified nr
                    of seconds.
                  type: integer
                payload:
                  description: Payload identifier which can be further used to identify
                    the work a certain thread is executing.
                  type: string
                pid:
                  description: UNIX Process ID as a number, e.g., 1234.
                  type: integer
                thread:
                  description: Python thread object.
                  type: object
              required:
              - bytes
              type: object
      responses:
        '200':
          description: OK
        '400':
          description: Cannot decode json parameter list.
        '401':
          description: Invalid Auth Token
        '404':
          description: Key not found.
      summary: Create
      tags:
      - Heartbeat
  /identities/{account}/userpass:
    put:
      description: Creates a new UserPass identity and maps it to an account.
      parameters:
      - description: The account for the identity.
        in: path
        name: account
        required: true
        schema:
          type: string
        style: simple
      - description: Username for the identity.
        in: query
        name: X-Rucio-Username
        required: true
        schema:
          type: string
        style: simple
      - description: The password for the identity.
        in: query
        name: X-Rucio-Password
        required: true
        schema:
          type: string
        style: simple
      - description: The email for the identity.
        in: query
        name: X-Rucio-Email
        required: false
        schema:
          type: string
        style: simple
      responses:
        '201':
          content:
            application/json:
              schema:
                enum:
                - Created
                type: string
          description: OK
        '401':
          description: Invalid Auth Token
        '400':
          description: Missing username or password.
      summary: Create UserPass identity
      tags:
      - Identity
  /identities/{account}/x509:
    put:
      description: Creates a new X509 identity and maps it to an account.
      parameters:
      - description: The account for the identity.
        in: path
        name: account
        required: true
        schema:
          type: string
        style: simple
      - description: The email for the identity.
        in: query
        name: X-Rucio-Email
        required: false
        schema:
          type: string
        style: simple
      responses:
        '201':
          content:
            application/json:
              schema:
                enum:
                - Created
                type: string
          description: OK
        '401':
          description: Invalid Auth Token
      summary: Create X509 identity
      tags:
      - Identity
  /identities/{account}/gss:
    put:
      description: Creates a new GSS identity and maps it to an account.
      parameters:
      - description: The account for the identity.
        in: path
        name: account
        required: true
        schema:
          type: string
        style: simple
      - description: The email for the identity.
        in: query
        name: X-Rucio-Email
        required: false
        schema:
          type: string
        style: simple
      responses:
        '201':
          content:
            application/json:
              schema:
                enum:
                - Created
                type: string
          description: OK
        '401':
          description: Invalid Auth Token
      summary: Create GSS identity
      tags:
      - Identity
  /identities/{identity_key}/{type}/accounts:
    get:
      description: List all identities mapped to an account.
      parameters:
      - description: Identity string.
        in: path
        name: identity_key
        required: true
        schema:
          type: string
        style: simple
      - description: Identity type.
        in: path
        name: type
        required: true
        schema:
          type: string
        style: simple
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  description: Account for the identity.
                  type: object
                type: array
          description: OK
        '401':
          description: Not acceptable
      summary: List
      tags:
      - Identity
  /import:
    post:
      description: Import data into rucio
      requestBody:
        content:
          application/json:
            schema:
              properties:
                accounts:
                  description: Account data.
                  items:
                    description: An account.
                    properties:
                      account:
                        description: The account identifier.
                        type: string
                      email:
                        description: The email of an account.
                        type: string
                      identities:
                        description: The identiies accociated with an account. Deletes
                          old identites and adds the newly defined ones.
                        items:
                          description: One identity associated with an account.
                          properties:
                            identity:
                              description: Identifier of the identity.
                              type: string
                            password:
                              description: The password if the type is USERPASS.
                              type: string
                            type:
                              description: The type of the identity.
                              enum:
                              - X509
                              - GSS
                              - USERPASS
                              - SSH
                              - SAML
                              - OIDC
                              type: string
                          type: object
                        type: array
                    type: object
                  type: array
                distances:
                  additionalProperties:
                    additionalProperties:
                      description: Distance for two rses.
                      properties:
                        active:
                          description: Active FTS transfer.
                          type: integer
                        agis_distance:
                          description: The agis distance between the rses.
                          type: integer
                        failed:
                          description: Failed fts transfer.
                          type: integer
                        finished:
                          description: Finished FTS transfer.
                          type: integer
                        geoip_distance:
                          description: The geoip distance between the rses.
                          type: integer
                        ranking:
                          description: The distance between the rses.
                          type: integer
                        submitted:
                          description: Submitted FTS transfer.
                          type: integer
                        transfer_speed:
                          description: FTS transfer speed.
                          type: integer
                      type: object
                      x-additionalPropertiesName: dest rse
                    description: Distances with dest rse as key.
                    type: object
                    x-additionalPropertiesName: src rse
                  description: Distances data with src rse name as key.
                  type: object
                rses:
                  additionalProperties:
                    properties:
                      rse_type:
                        description: The type of an rse.
                        enum:
                        - DISK
                        - TAPE
                        type: string
                    type: object
                    x-additionalPropertiesName: rse name
                  description: Rse data with rse name as key.
                  type: object
              type: object
      responses:
        '201':
          content:
            application/json:
              schema:
                enum:
                - Created
                type: string
          description: OK
        '401':
          description: Invalid Auth Token
      summary: Import data
      tags:
      - Import
  /lifetime_exceptions/:
    get:
      description: Retrieves all exceptions.
      responses:
        '200':
          content:
            application/x-json-stream:
              schema:
                description: One exception per line.
                items:
                  description: A lifetime exception
                  properties:
                    account:
                      description: The account accociated with the lifetime exception.
                      type: string
                    comments:
                      description: The comments of the lifetime exception.
                      type: string
                    created_at:
                      description: The datetime the lifetime exception was created.
                      type: string
                    did_type:
                      description: The type of the did.
                      enum:
                      - F
                      - D
                      - C
                      - A
                      - X
                      - Y
                      - Z
                      type: string
                    expires_at:
                      description: The datetime the lifetime exception expires.
                      type: string
                    id:
                      description: The id of the lifetime exception.
                      type: string
                    name:
                      description: The name of the lifetime exception.
                      type: string
                    pattern:
                      description: The patter of the lifetime exception.
                      type: string
                    scope:
                      description: The scope associated with the lifetime exception.
                      type: string
                    state:
                      description: The state of the lifetime exception.
                      enum:
                      - A
                      - R
                      - W
                      type: string
                  type: object
                type: array
          description: OK
        '401':
          description: Invalid Auth Token
        '404':
          description: Lifetime exception not found
        '406':
          description: Not acceptable
      summary: List Exceptions
      tags:
      - Lifetime Exceptions
    post:
      description: Creates a Lifetime Exception.
      requestBody:
        content:
          application/json:
            schema:
              properties:
                comments:
                  description: The comment for the lifetime exception.
                  type: string
                dids:
                  description: List of dids associated with the lifetime exception.
                  items:
                    description: A did
                    properties:
                      name:
                        description: The name of the did.
                        type: string
                    type: object
                  type: array
                expires_at:
                  description: The expiration date for the lifetime exception.
                  type: string
                pattern:
                  description: The pattern of the lifetime exception.
                  type: string
              type: object
      responses:
        '201':
          content:
            application/json:
              schema:
                description: The exception id.
                type: string
          description: OK
        '401':
          description: Invalid Auth Token
        '400':
          description: Cannot decode json parameter list.
        '409':
          description: Lifetime exception already exists.
      summary: Create Exception
      tags:
      - Lifetime Exceptions
  /lifetime_exceptions/{exception_id}:
    get:
      description: Get a single Lifetime Exception.
      parameters:
      - description: The id of the lifetime exception.
        in: path
        name: exception_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        '200':
          content:
            application/x-json-stream:
              schema:
                description: List of lifetime exceptions associated with the id.
                items:
                  description: A lifetime exception
                  properties:
                    account:
                      description: The account associated with the lifetime exception.
                      type: string
                    comments:
                      description: The comments of the lifetime exception.
                      type: string
                    created_at:
                      description: The datetime the lifetime exception was created.
                      type: string
                    did_type:
                      description: The type of the did.
                      enum:
                      - F
                      - D
                      - C
                      - A
                      - X
                      - Y
                      - Z
                      type: string
                    expires_at:
                      description: The datetime the lifetime exception expires.
                      type: string
                    id:
                      description: The id of the lifetime exception.
                      type: string
                    name:
                      description: The name of the lifetime exception.
                      type: string
                    pattern:
                      description: The patter of the lifetime exception.
                      type: string
                    scope:
                      description: The scope associated with the lifetime exception.
                      type: string
                    state:
                      description: The state of the lifetime exception.
                      enum:
                      - A
                      - R
                      - W
                      type: string
                  type: object
                type: array
          description: OK
        '401':
          description: Invalid Auth Token
        '404':
          description: Lifetime exception not found
        '406':
          description: Not acceptable
      summary: Get Exception
      tags:
      - Lifetime Exceptions
    put:
      description: Approve/Reject a Lifetime Exception.
      parameters:
      - description: The id of the Lifetime Exception.
        in: path
        name: exception_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              properties:
                state:
                  description: The new state for the Lifetime Exception.
                  enum:
                  - A
                  - R
                  type: string
              type: object
      responses:
        '201':
          content:
            application/json:
              schema:
                enum:
                - Created
                type: string
          description: OK
        '401':
          description: Invalid Auth Token
        '404':
          description: Lifetime Exception not found
        '400':
          description: Cannot decode json parameter list.
      summary: Approve/Reject exception
      tags:
      - Lifetime Exceptions
  /locks/{rse}:
    get:
      description: Get all dataset locks for an associated rse.
      parameters:
      - description: The rse name.
        in: path
        name: rse
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              properties:
                did_type:
                  description: The did type to filter for.
                  enum:
                  - dataset
                  type: string
              type: object
      responses:
        '200':
          content:
            application/x-json-stream:
              schema:
                description: Locks associated with the rse.
                items:
                  description: A lock
                  properties:
                    accessed_at:
                      description: The last time is was accessed.
                      type: string
                    account:
                      description: The associated account.
                      type: string
                    bytes:
                      description: The bytes limit for the lock.
                      type: integere
                    length:
                      description: The length of the rule.
                      type: integer
                    name:
                      description: The name of the rule.
                      type: string
                    rse:
                      description: The name of the associated rse.
                      type: string
                    rse_id:
                      description: The id of the associated rse.
                      type: string
                    rule_id:
                      description: The id of the rule.
                      type: string
                    scope:
                      description: The scope of the associated rse.
                      type: string
                    state:
                      description: The state of the rule.
                      enum:
                      - R
                      - O
                      - S
                      type: string
                  type: object
                type: array
          description: OK
        '401':
          description: Invalid Auth Token
        '500':
          content:
            application/json:
              schema:
                enum:
                - wrong did_type specified
                type: string
          description: Wrong did type
        '406':
          description: Not acceptable
      summary: Get locks by rse
      tags:
      - Lock
  /locks/{scope_name}:
    get:
      description: Get all dataset locks for an associated rse.
      parameters:
      - description: The scope name.
        in: path
        name: scope_name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              properties:
                did_type:
                  description: The did type to filter for.
                  enum:
                  - dataset
                  type: string
              type: object
      responses:
        '200':
          content:
            application/x-json-stream:
              schema:
                description: Locks associated with the rse.
                items:
                  description: A lock
                  properties:
                    accessed_at:
                      description: The last time is was accessed.
                      type: string
                    account:
                      description: The associated account.
                      type: string
                    bytes:
                      description: The bytes limit for the lock.
                      type: integere
                    length:
                      description: The length of the rule.
                      type: integer
                    name:
                      description: The name of the rule.
                      type: string
                    rse:
                      description: The name of the associated rse.
                      type: string
                    rse_id:
                      description: The id of the associated rse.
                      type: string
                    rule_id:
                      description: The id of the rule.
                      type: string
                    scope:
                      description: The scope of the associated rse.
                      type: string
                    state:
                      description: The state of the rule.
                      enum:
                      - R
                      - O
                      - S
                      type: string
                  type: object
                type: array
          description: OK
        '401':
          description: Invalid Auth Token
        '500':
          content:
            application/json:
              schema:
                enum:
                - wrong did_type specified
                type: string
          description: Wrong did type
        '406':
          description: Not acceptable
      summary: Get locks by scope
      tags:
      - Lock
  /locks/bulk_locks_for_dids:
    post:
      description: Get all dataset locks for the associated dids.
      requestBody:
        content:
          application/json:
            schema:
              properties:
                dids:
                  description: The dids associated with the locks.
                  items:
                    description: A did
                    properties:
                      name:
                        description: The name of the did.
                        type: string
                      scope:
                        description: The scope of the did.
                        type: string
                      type:
                        description: The type of the did.
                        enum:
                        - dataset
                        - container
                        type: string
                    required:
                    - scope
                    - name
                    type: object
                  type: array
              type: object
      responses:
        '200':
          content:
            application/x-json-stream:
              schema:
                description: Locks associated with the rse.
                items:
                  description: A lock
                  properties:
                    accessed_at:
                      description: The last time is was accessed.
                      type: string
                    account:
                      description: The associated account.
                      type: string
                    bytes:
                      description: The bytes limit for the lock.
                      type: integere
                    length:
                      description: The length of the rule.
                      type: integer
                    name:
                      description: The name of the rule.
                      type: string
                    rse:
                      description: The name of the associated rse.
                      type: string
                    rse_id:
                      description: The id of the associated rse.
                      type: string
                    rule_id:
                      description: The id of the rule.
                      type: string
                    scope:
                      description: The scope of the associated rse.
                      type: string
                    state:
                      description: The state of the rule.
                      enum:
                      - R
                      - O
                      - S
                      type: string
                  type: object
                type: array
          description: OK
        '401':
          description: Invalid Auth Token
        '400':
          content:
            application/json:
              schema:
                enum:
                - Can not find the list of DIDs in the data. Use "dids" keyword.
                type: string
          description: Wrong did type
        '406':
          description: Not acceptable
      summary: Get locks by dids
      tags:
      - Lock
  /meta/{key}:
    post:
      description: Creates a new allowed key (value is NULL).
      parameters:
      - description: The name of the key.
        in: path
        name: key
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              properties:
                key_type:
                  description: The key tpye.
                  type: string
                value_regexp:
                  description: The value regexpression.
                  type: string
                value_type:
                  description: The value type.
                  type: string
              type: object
      responses:
        '201':
          content:
            application/json:
              schema:
                enum:
                - Created
                type: string
          description: OK
        '400':
          description: Cannot decode json parameter list / Unsupported value type.
        '401':
          description: Invalid Auth Token.
        '409':
          description: Key already exists.
      summary: Create key
      tags:
      - Meta
  /meta/{key}/:
    get:
      description: List all values for a key.
      parameters:
      - description: The reference key.
        in: path
        name: key
        required: true
        schema:
          type: string
        style: simple
      responses:
        '200':
          content:
            application/json:
              schema:
                description: List of all key values.
                items:
                  description: A value associated with a key.
                  type: string
                type: array
          description: OK
        '401':
          description: Invalid Auth Token
        '406':
          description: Not acceptable
      summary: Get value for key
      tags:
      - Meta
    post:
      description: Creates a new value for a key.
      parameters:
      - description: The reference key.
        in: path
        name: key
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              properties:
                value:
                  description: The new value associated with a key.
                  type: string
              required:
              - value
              type: null
      responses:
        '201':
          content:
            application/json:
              schema:
                enum:
                - Created
                type: string
          description: OK
        '400':
          description: Cannot decode json parameter list / Invalid value for key.
        '401':
          description: Invalid Auth Token
        '404':
          description: Key not found
        '409':
          description: Value already exists.
      summary: Create value for key
      tags:
      - Meta
  /ping:
    get:
      description: Ping the server and get data about it.
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  version:
                    descripption: The server version.
                    type: string
                type: object
          description: OK
        '406':
          description: Not acceptable
      summary: Ping
      tags:
      - Ping
  /redirect/{scope_name}/metalink:
    get:
      description: Get Metalink redirect.
      parameters:
      - description: The data identifier (scope)/(name).
        in: path
        name: scope_name
        required: true
        schema:
          type: string
        style: simple
      - description: The client ip.
        in: query
        name: ip
        required: false
        schema:
          type: string
        style: simple
      - in: query
        name: fqdn
        required: false
        schema:
          type: string
        style: simple
      - in: query
        name: site
        required: false
        schema:
          type: string
        style: simple
      - in: query
        name: schemes
        required: false
        schema:
          type: array
        style: simple
      - in: query
        name: select
        required: false
        schema:
          type: string
        style: simple
      - in: query
        name: sort
        required: false
        schema:
          type: string
        style: simple
      responses:
        '200':
          content:
            application/metalink4+xml:
              schema:
                description: The metalink file.
                type: string
          description: OK
        '401':
          description: Invalid Auth Token
        '404':
          description: Rse or did not found
        '406':
          description: Not acceptable
      summary: Metalink redirect
      tags:
      - Redirect
  /redirect/{scope_name}:
    get:
      description: Get the header redirect.
      parameters:
      - description: The data identifier (scope)/(name).
        in: path
        name: scope_name
        required: true
        schema:
          type: string
        style: simple
      - description: The client ip.
        in: query
        name: ip
        required: false
        schema:
          type: string
        style: simple
      - in: query
        name: fqdn
        required: false
        schema:
          type: string
        style: simple
      - in: query
        name: site
        required: false
        schema:
          type: string
        style: simple
      - in: query
        name: schemes
        required: false
        schema:
          type: array
        style: simple
      - in: query
        name: select
        required: false
        schema:
          type: string
        style: simple
      - in: query
        name: sort
        required: false
        schema:
          type: string
        style: simple
      - in: query
        name: rse
        required: false
        schema:
          type: string
        style: simple
      responses:
        '303':
          content:
            application/json:
              schema:
                description: The redirect url.
                type: string
          description: OK
        '401':
          description: Invalid Auth Token
        '404':
          description: Rse or did not found
      summary: Header redirect
      tags:
      - Redirect
  /replicas/list:
    post:
      description: List all replicas for a DID.
      parameters:
      - description: The client ip address.
        in: header
        name: X-Forwarded-For
        schema:
          type: string
      - description: The maximum number pfns per replica to return.
        in: query
        name: limit
        schema:
          type: integer
      - description: Requested sorting of the result, e.g., 'geoip', 'closeness',
          'dynamic', 'ranking', 'random'.
        in: query
        name: select
        schema:
          type: string
      - description: Requested sorting of the result, e.g., 'geoip', 'closeness',
          'dynamic', 'ranking', 'random'.
        in: query
        name: sort
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                all_states:
                  description: Return all replicas whatever state they are in. Adds
                    an extra 'states' entry in the result dictionary.
                  type: boolean
                client_location:
                  description: The clients location.
                  type: string
                dids:
                  description: List of Dids.
                  items:
                    properties:
                      name:
                        description: The name of the did.
                        type: string
                      scope:
                        description: The scope of the did.
                        type: string
                    type: object
                  type: array
                domain:
                  description: The network domain for the call, either None, 'wan'
                    or 'lan'. None is fallback to 'wan', 'all' is both ['lan','wan']
                  type: string
                ignore_availability:
                  description: If the availability should be ignored.
                  type: boolean
                nrandom:
                  description: The maximum number of replicas to return.
                  type: integer
                resolve_archives:
                  description: When set to True, find archives which contain the replicas.
                  type: boolean
                resolve_parents:
                  description: When set to True, find all parent datasets which contain
                    the replicas.
                  type: boolean
                rse_expression:
                  description: The RSE expression to restrict on a list of RSEs.
                  type: string
                schemes:
                  description: A list of schemes to filter the replicas.
                  items:
                    type: string
                  type: array
                signature_lifetime:
                  description: If supported, in seconds, restrict the lifetime of
                    the signed PFN.
                  type: integer
                sort:
                  description: Requested sorting of the result, e.g., 'geoip', 'closeness',
                    'dynamic', 'ranking', 'random'.
                  type: string
                unavailable:
                  deprecated: true
                  description: If unavailable rse should be considered.
                  type: boolean
                updated_after:
                  description: datetime object (UTC time), only return replicas updated
                    after this time
                  type: string
              type: object
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  properties:
                    adler32:
                      description: The adler32 checksum.
                      type: string
                    bytes:
                      description: The size of the replica in bytes.
                      type: integer
                    md5:
                      description: The md5 checksum.
                      type: string
                    name:
                      description: The name of the replica.
                      type: string
                    pfns:
                      description: The pfns.
                      type: array
                    rses:
                      description: The RSESs.
                      type: array
                    scope:
                      description: The scope of the replica.
                      type: string
                  type: object
                type: array
            application/metalink4+xml:
              schema:
                properties:
                  adler32:
                    description: The adler32 checksum.
                    type: string
                  bytes:
                    description: The size of the replica in bytes.
                    type: integer
                  md5:
                    description: The md5 checksum.
                    type: string
                  name:
                    description: The name of the replica.
                    type: string
                  pfns:
                    description: The pfns.
                    type: array
                  rses:
                    description: The RSESs.
                    type: array
                  scope:
                    description: The scope of the replica.
                    type: string
                type: object
          description: OK
        '400':
          description: Cannot decode json parameter list.
        '401':
          description: Invalid Auth Token
        '404':
          description: Did not found.
        '406':
          description: Not acceptable
      summary: List Replicas
      tags:
      - Replicas
  /replicas/{scope_name}:
    get:
      description: List all replicas for data identifiers.
      parameters:
      - description: The DID associated with the replicas.
        in: path
        name: scope_name
        required: true
        schema:
          type: string
        style: simple
      - description: The client ip
        in: header
        name: X-Forwarded-For
        schema:
          type: string
      - description: The schemes of the replicas.
        in: query
        name: schemes
        schema:
          type: string
      - description: The sorting algorithm.
        in: query
        name: select
        schema:
          enum:
          - geoip
          - closeness
          - dynamic
          - ranking
          - random
          type: string
      - description: The maximum number of replicas returned.
        in: query
        name: limit
        schema:
          type: integer
      responses:
        '200':
          content:
            application/x-json-stream:
              schema:
                description: A list with all replicas.
                items:
                  description: A replica. Possibly contains more information.
                  properties:
                    adler32:
                      description: The adler32 checksum of the replica.
                      type: string
                    bytes:
                      description: The size of the replica in bytes.
                      type: integer
                    md5:
                      description: The md5 checksum of the replica.
                      type: string
                    name:
                      description: The name of the replica.
                      type: string
                    pfns:
                      description: The pfns associated with the replica.
                      type: array
                    rses:
                      description: The rse associated with the replica.
                      type: string
                    scope:
                      description: The scope of the replica.
                      type: string
                  type: object
                type: array
          description: OK
        '401':
          description: Invalid Auth Token
        '404':
          description: Did not found
        '406':
          description: Not acceptable
      summary: Get Replicas
      tags:
      - Replicas
  /replicas/suspicious:
    get:
      description: List the suspicious replicas on a list of RSEs.
      parameters:
      - description: The RSE expression to filter for.
        in: query
        name: rse_expression
        schema:
          type: string
      - description: Date to filter for.
        in: query
        name: younger_than
        schema:
          type: string
      - description: The maximum number of attempts to make.
        in: query
        name: nattempts
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  properties:
                    cnt:
                      description: The number of replicas.
                      type: integer
                    created_at:
                      description: The time when the replica was created.
                      type: string
                    name:
                      description: The name of the Replica.
                      type: string
                    rse:
                      description: The rse name.
                      type: string
                    rse_id:
                      description: The id of the rse.
                      type: string
                    scope:
                      description: The scope of the Replica.
                      type: string
                  type: object
                type: array
          description: OK
        '401':
          description: Invalid Auth Token
        '404':
          description: Not found
        '406':
          description: Not acceptable
      summary: List Suspicious Replicas
      tags:
      - Replicas
    post:
      description: Declare a list of suspicious replicas.
      requestBody:
        content:
          application/json:
            schema:
              properties:
                pfns:
                  description: The list of pfns.
                  items:
                    type: string
                  type: array
                reason:
                  description: The reason for the declaration.
                  type: string
              type: object
      responses:
        '201':
          content:
            application/json:
              schema:
                description: Returns the not declared files.
                type: array
          description: OK
        '400':
          description: Can not decode json parameter list.
        '404':
          description: Not found
        '406':
          description: Not acceptable
      summary: Declare Suspicious Replicas
      tags:
      - Replicas
  /replicas/bad/states:
    get:
      description: List the bad or suspicious replicas by states.
      parameters:
      - description: The state of the file.
        in: query
        name: state
        schema:
          enum:
          - SUSPICIOUS
          - BAD
          type: string
      - description: The rse name.
        in: query
        name: rse
        schema:
          type: string
      - description: Date to select bad replicas younger than this date.
        in: query
        name: younger_than
        schema:
          format: date-time
          type: string
      - description: Date to select bad replicas older than this date.
        in: query
        name: older_than
        schema:
          format: date-time
          type: string
      - description: The maximum number of replicas returned.
        in: query
        name: limit
        schema:
          type: integer
      - description: Flag to include pfns.
        in: query
        name: list_pfns
        schema:
          type: boolean
      responses:
        '200':
          content:
            application/x-json-stream:
              schema:
                description: A list of all result replicas.
                items:
                  oneof:
                  - properties:
                      name:
                        description: The name of the replica.
                        type: string
                      scope:
                        description: The scope fo the replica.
                        type: string
                      type:
                        description: The type of the replica.
                        type: string
                    type: object
                  - properties:
                      created_at:
                        description: The date-time the replica was created.
                        format: date-time
                        type: string
                      name:
                        description: The name of the replica.
                        type: string
                      rse:
                        description: The name of the associated rse.
                        type: string
                      rse_id:
                        description: The id of the associated rse.
                        type: string
                      scope:
                        description: The scope fo the replica.
                        type: string
                      state:
                        description: The state of the replica.
                        type: string
                      updated_at:
                        description: The date-time the replica was updated.
                        format: date-time
                        type: string
                    type: object
                type: array
          description: OK
        '401':
          description: Invalid Auth Token
        '406':
          description: Not acceptable
      summary: List Bad Replicas By States
      tags:
      - Replicas
  /replicas/bad/summary:
    get:
      description: Return a summary of the bad replicas by incident.
      parameters:
      - description: The RSE expression.
        in: query
        name: rse_expression
        schema:
          type: string
      - description: The start date.
        in: query
        name: from_date
        schema:
          format: date-time
          type: string
      - description: The end date.
        in: query
        name: to_date
        schema:
          format: date-time
          type: string
      responses:
        '200':
          content:
            application/x-json-stream:
              schema:
                description: A list of summaries.
                items:
                  properties:
                    created_at:
                      description: The creation date-time.
                      format: date-time
                      type: string
                    reason:
                      description: The reason for the incident.
                      type: string
                    rse:
                      description: The name of the associated RSE.
                      type: string
                    rse_id:
                      description: The id of the associated RSE.
                      type: string
                  type: object
                type: array
          description: OK
        '401':
          description: Invalid Auth Token
        '406':
          description: Not acceptable
      summary: Bad Replicas Summary
      tags:
      - Replicas
  /replicas/bad/pfns:
    post:
      description: Declare a list of bad PFNs.
      requestBody:
        content:
          application/json:
            schema:
              properties:
                expires_at:
                  description: The expires at value. Only apply to TEMPORARY_UNAVAILABLE.
                  format: date-time
                  type: string
                pfns:
                  description: The list of pfns associated with the bad PFNs.
                  items:
                    type: string
                  type: array
                reason:
                  description: The reason for the change.
                  type: string
                state:
                  description: The state to set the PFNs to.
                  enum:
                  - BAD
                  - SUSPICIOUS
                  - TEMPORARY_UNAVAILABLE
                  type: string
              type: object
      responses:
        '201':
          description: Created
        '400':
          description: Cannot decode json parameter list.
        '401':
          description: Invalid Auth Token
        '404':
          description: Replica not found
        '409':
          description: Duplicate
      summary: Declare Bad PFNs
      tags:
      - Replicas
  /replicas/bad/dids:
    post:
      description: Declare a list of bad replicas by DID.
      requestBody:
        content:
          application/json:
            schema:
              properties:
                dids:
                  description: The list of dids associated with the bad replicas.
                  items:
                    properties:
                      name:
                        description: The name of the did.
                        type: string
                      scope:
                        description: The scope of the did.
                        type: string
                    type: object
                  type: array
                expires_at:
                  description: The expires at value.
                  format: date-time
                  type: string
                reason:
                  description: The reason for the change.
                  type: string
                rse:
                  description: The name of the rse.
                  type: string
              type: object
      responses:
        '201':
          content:
            application/json:
              schema:
                description: All files not declared as bad.
                items:
                  type: string
                type: array
          description: OK
        '400':
          description: Cannot decode json parameter list.
        '401':
          description: Invalid Auth Token
        '404':
          description: Not found
      summary: Mark Bad by DID
      tags:
      - Replicas
  /replicas/rse/{rse}:
    get:
      description: List dataset replicas per RSE.
      parameters:
      - description: The rse to filter for.
        in: path
        name: rse
        required: true
        schema:
          type: string
        style: simple
      responses:
        '200':
          content:
            application/x-json-stream:
              schema:
                description: A list of dataset replicas.
                items:
                  properties:
                    accessed_at:
                      description: The date-time the replica was accessed.
                      format: date-time
                      type: string
                    available_bytes:
                      description: The number of available bytes of the replica.
                      type: integer
                    available_length:
                      description: The available length of the replica.
                      type: integer
                    bytes:
                      description: The size of the replica.
                      type: integer
                    created_at:
                      description: The date-time the replica was created.
                      format: date-time
                      type: string
                    length:
                      description: The length of the replica.
                      type: integer
                    name:
                      description: The name of the replica.
                      type: string
                    rse:
                      description: The name of the associated RSE.
                      type: string
                    rse_id:
                      description: The id of the associated RSE.
                      type: string
                    scope:
                      description: The scope of the replica.
                      type: string
                    state:
                      description: The state of the replica.
                      type: string
                    updated_at:
                      description: The date-time the replica was updated.
                      format: date-time
                      type: string
                  type: object
                type: array
          description: OK
        '401':
          description: Invalid Auth Token
        '406':
          description: Not acceptable
      summary: List Dataset Replicas per RSE
      tags:
      - Replicas
  /replicas/bad:
    post:
      description: Declares a list of bad replicas.
      requestBody:
        content:
          application/json:
            schema:
              properties:
                pfns:
                  description: The list of pfns.
                  items:
                    type: string
                  type: array
                reason:
                  description: The reason for the declaration.
                  type: string
              type: object
      responses:
        '201':
          content:
            application/json:
              schema:
                description: Returns the not declared files.
                type: array
          description: OK
        '400':
          description: Can not decode json parameter list.
        '404':
          description: Not found
        '406':
          description: Not acceptable
      summary: Declare Bad Replicas
      tags:
      - Replicas
  /replicas/dids:
    post:
      description: List the DIDs associated to a list of replicas.
      requestBody:
        content:
          application/json:
            schema:
              properties:
                pfns:
                  description: The list of pfns.
                  items:
                    type: string
                  type: array
                rse:
                  description: The RSE name.
                  type: string
              required:
              - rse
              type: object
      responses:
        '200':
          content:
            application/x-json-stream:
              schema:
                items:
                  additionalProperties:
                    description: A mapping from a pfn to a did.
                    properties:
                      name:
                        description: The name of the DID.
                        type: str
                      scope:
                        description: The scope of the DID.
                        type: str
                    type: object
                    x-additionalPropertiesName: mapped PFNs to DIDs
                  type: object
                type: array
          description: OK
        '400':
          description: Cannot decode json parameter list.
        '401':
          description: Invalid Auth Token
        '404':
          description: Not found
        '406':
          description: Not acceptable
      summary: List Replicas Dids
      tags:
      - Replicas
  /replicas/{scope_name}/datasets:
    get:
      description: List dataset replicas.
      parameters:
      - description: data identifier (scope)/(name).
        in: path
        name: scope_name
        required: true
        schema:
          type: string
        style: simple
      - description: Flag to ennable lookup at the file level.
        in: query
        name: deep
        schema:
          type: boolean
      responses:
        '200':
          content:
            application/x-json-stream:
              schema:
                description: A list of dataset replicas.
                items:
                  properties:
                    accessed_at:
                      description: The date-time the replica was accessed.
                      format: date-time
                      type: string
                    available_bytes:
                      description: The number of available bytes of the replica.
                      type: integer
                    available_length:
                      description: The available length of the replica.
                      type: integer
                    bytes:
                      description: The size of the replica.
                      type: integer
                    created_at:
                      description: The date-time the replica was created.
                      format: date-time
                      type: string
                    length:
                      description: The length of the replica.
                      type: integer
                    name:
                      description: The name of the replica.
                      type: string
                    rse:
                      description: The name of the associated RSE.
                      type: string
                    rse_id:
                      description: The id of the associated RSE.
                      type: string
                    scope:
                      description: The scope of the replica.
                      type: string
                    state:
                      description: The state of the replica.
                      type: string
                    updated_at:
                      description: The date-time the replica was updated.
                      format: date-time
                      type: string
                  type: object
                type: array
          description: OK
        '401':
          description: Invalid Auth Token
        '404':
          description: Not found
        '406':
          description: Not acceptable
      summary: List Dataset Replicas
      tags:
      - Replicas
  /replicas/datasets_bulk:
    post:
      description: List dataset replicas for multiple dids.
      requestBody:
        content:
          application/json:
            schema:
              properties:
                dids:
                  description: A list of dids.
                  items:
                    description: A did.
                    properties:
                      name:
                        description: The name of the did.
                        type: string
                      scope:
                        description: The scope of the did.
                        type: string
                    type: object
                  type: array
              required:
              - dids
              type: object
      responses:
        '200':
          content:
            application/x-json-stream:
              schema:
                description: A list of dataset replicas.
                items:
                  properties:
                    accessed_at:
                      description: The date-time the replica was accessed.
                      format: date-time
                      type: string
                    available_bytes:
                      description: The number of available bytes of the replica.
                      type: integer
                    available_length:
                      description: The available length of the replica.
                      type: integer
                    bytes:
                      description: The size of the replica.
                      type: integer
                    created_at:
                      description: The date-time the replica was created.
                      format: date-time
                      type: string
                    length:
                      description: The length of the replica.
                      type: integer
                    name:
                      description: The name of the replica.
                      type: string
                    rse:
                      description: The name of the associated RSE.
                      type: string
                    rse_id:
                      description: The id of the associated RSE.
                      type: string
                    scope:
                      description: The scope of the replica.
                      type: string
                    state:
                      description: The state of the replica.
                      type: string
                    updated_at:
                      description: The date-time the replica was updated.
                      format: date-time
                      type: string
                  type: object
                type: array
          description: OK
        '400':
          description: Bad Request.
        '401':
          description: Invalid Auth Token
        '404':
          description: Not found
        '406':
          description: Not acceptable
      summary: List Dataset Replicas for Multiple DIDs
      tags:
      - Replicas
  /replicas/tombstone:
    post:
      description: Set a tombstone on a list of replicas.
      requestBody:
        content:
          application/json:
            schema:
              properties:
                replicas:
                  description: The replicas to set the tombstone to.
                  items:
                    properties:
                      name:
                        description: The name of the replica.
                        type: string
                      rse:
                        description: The rse associated with the tombstone.
                        type: string
                      scope:
                        description: The scope of the replica
                        type: string
                    required:
                    - rse
                    - scope
                    - name
                    type: object
                  type: array
              type: object
      responses:
        '201':
          description: Created
        '401':
          description: Invalid Auth Token
        '404':
          description: Not found
        '423':
          description: Replica is locked.
      summary: Set Tombstone
      tags:
      - Replicas
  /replicas/{scope_name}/datasets_vp:
    get:
      description: 'List dataset replicas using the Virtual Placement service.

        This is an RnD function and might change or go away at any time.

        '
      parameters:
      - description: data identifier (scope)/(name).
        in: path
        name: scope_name
        required: true
        schema:
          type: string
        style: simple
      - description: Flag to ennable lookup at the file level.
        in: query
        name: deep
        schema:
          type: boolean
      responses:
        '200':
          description: OK. This needs documentation!
        '401':
          description: Invalid Auth Token
        '406':
          description: Not acceptable
      summary: List Dataset Replicas VP
      tags:
      - Replicas
  /requests/{scope_name}/{rse}:
    get:
      description: Get a request for a given DID to a destinaion RSE.
      parameters:
      - description: Data identifier (scope)/(name).
        in: path
        name: scope_name
        required: true
        schema:
          type: string
        style: simple
      - description: Destination rse.
        in: path
        name: rse
        required: true
        schema:
          type: string
        style: simple
      responses:
        '200':
          content:
            application/json:
              schema:
                description: The request associated with the DID and destination RSE.
                properties:
                  account:
                    description: The account which issued the request.
                    type: string
                  activity:
                    description: The activity of the request.
                    type: string
                  adler32:
                    description: The adler32 checksum of the did to transfer.
                    type: string
                  attributes:
                    description: All attributes associated with the request.
                    type: string
                  bytes:
                    description: The size of the did in bytes.
                    type: integer
                  dest_rse:
                    description: The name of the destination RSE.
                    type: string
                  dest_rse_id:
                    description: The destination RSE id.
                    type: string
                  dest_url:
                    description: The destination url.
                    type: string
                  did_type:
                    description: The did type.
                    type: string
                  err_msg:
                    description: An error message if one occured.
                    type: string
                  estimated_at:
                    description: The time the request got estimated.
                    type: string
                  estimated_stated_at:
                    description: The estimation of the started at value.
                    type: string
                  estimated_transferred_at:
                    description: The estimation of the transfered at value.
                    type: string
                  external_host:
                    description: External host of the request.
                    type: string
                  external_id:
                    description: External id of the request.
                    type: string
                  id:
                    description: The id of the request.
                    type: strig
                  md5:
                    description: The md5 checksum of the did to transfer.
                    type: string
                  name:
                    description: The name of the transfer.
                    type: string
                  previous_attempt_id:
                    description: The id of the previous attempt.
                    type: string
                  priority:
                    description: The priority of the request.
                    type: integer
                  request_type:
                    description: The request type.
                    enum:
                    - T
                    - U
                    - D
                    - I
                    - O
                    type: string
                  requested_at:
                    description: The time the request got requested.
                    type: string
                  retry_count:
                    description: The numbers of attempted retires.
                    type: integer
                  rule_id:
                    description: The id of the associated replication rule.
                    type: string
                  scope:
                    description: The scope of the transfer.
                    type: string
                  source_rse:
                    description: The name of the source RSE.
                    type: string
                  source_rse_id:
                    description: The source RSE id.
                    type: string
                  staging_finished_at:
                    description: The time the staging got finished.
                    type: string
                  staging_started_at:
                    description: The time the staging got started.
                    type: string
                  started_at:
                    description: The time the request got started.
                    type: string
                  state:
                    description: The state of the request.
                    enum:
                    - Q
                    - G
                    - S
                    - F
                    - D
                    - L
                    - N
                    - O
                    - A
                    - M
                    - U
                    - W
                    - P
                    type: string
                  submitted_at:
                    description: The time the request got submitted.
                    type: string
                  submitter_id:
                    description: The id of the submitter.
                    type: string
                  transferred_at:
                    description: The time the request got transfered.
                    type: string
                  transfertool:
                    description: The transfertool used.
                    type: string
                type: object
          description: OK
        '401':
          description: Invalid Auth Token
        '404':
          description: Not found
        '406':
          description: Not acceptable
      summary: Get Request
      tags:
      - Requests
  /requests/history/{scope_name}/{rse}:
    get:
      description: List a hostorical request for a given DID to a destination RSE.
      parameters:
      - description: Data identifier (scope)/(name).
        in: path
        name: scope_name
        required: true
        schema:
          type: string
        style: simple
      - description: Destination rse.
        in: path
        name: rse
        required: true
        schema:
          type: string
        style: simple
      responses:
        '200':
          content:
            application/json:
              schema:
                description: The request associated with the DID and destination RSE.
                properties:
                  account:
                    description: The account which issued the request.
                    type: string
                  activity:
                    description: The activity of the request.
                    type: string
                  adler32:
                    description: The adler32 checksum of the did to transfer.
                    type: string
                  attributes:
                    description: All attributes associated with the request.
                    type: string
                  bytes:
                    description: The size of the did in bytes.
                    type: integer
                  dest_rse:
                    description: The name of the destination RSE.
                    type: string
                  dest_rse_id:
                    description: The destination RSE id.
                    type: string
                  dest_url:
                    description: The destination url.
                    type: string
                  did_type:
                    description: The did type.
                    type: string
                  err_msg:
                    description: An error message if one occured.
                    type: string
                  estimated_at:
                    description: The time the request got estimated.
                    type: string
                  estimated_stated_at:
                    description: The estimation of the started at value.
                    type: string
                  estimated_transferred_at:
                    description: The estimation of the transfered at value.
                    type: string
                  external_host:
                    description: External host of the request.
                    type: string
                  external_id:
                    description: External id of the request.
                    type: string
                  id:
                    description: The id of the request.
                    type: strig
                  md5:
                    description: The md5 checksum of the did to transfer.
                    type: string
                  name:
                    description: The name of the transfer.
                    type: string
                  previous_attempt_id:
                    description: The id of the previous attempt.
                    type: string
                  priority:
                    description: The priority of the request.
                    type: integer
                  request_type:
                    description: The request type.
                    enum:
                    - T
                    - U
                    - D
                    - I
                    - O
                    type: string
                  requested_at:
                    description: The time the request got requested.
                    type: string
                  retry_count:
                    description: The numbers of attempted retires.
                    type: integer
                  rule_id:
                    description: The id of the associated replication rule.
                    type: string
                  scope:
                    description: The scope of the transfer.
                    type: string
                  source_rse:
                    description: The name of the source RSE.
                    type: string
                  source_rse_id:
                    description: The source RSE id.
                    type: string
                  staging_finished_at:
                    description: The time the staging got finished.
                    type: string
                  staging_started_at:
                    description: The time the staging got started.
                    type: string
                  started_at:
                    description: The time the request got started.
                    type: string
                  state:
                    description: The state of the request.
                    enum:
                    - Q
                    - G
                    - S
                    - F
                    - D
                    - L
                    - N
                    - O
                    - A
                    - M
                    - U
                    - W
                    - P
                    type: string
                  submitted_at:
                    description: The time the request got submitted.
                    type: string
                  submitter_id:
                    description: The id of the submitter.
                    type: string
                  transferred_at:
                    description: The time the request got transfered.
                    type: string
                  transfertool:
                    description: The transfertool used.
                    type: string
                type: object
          description: OK
        '401':
          description: Invalid Auth Token
        '404':
          description: Not found
        '406':
          description: Not acceptable
      summary: Get Historical Request
      tags:
      - Requests
  /requests/list:
    get:
      description: List requests for a given source and destination RSE or site.
      parameters:
      - description: The source rse.
        in: query
        name: src_rse
        schema:
          items:
            properties:
              rse_id:
                description: The id of the rse.
                type: string
            required:
            - rse_id
            type: object
          type: array
      - description: The destination rse.
        in: query
        name: dest_rse
        schema:
          items:
            properties:
              rse_id:
                description: The id of the rse.
                type: string
            required:
            - rse_id
            type: object
          type: array
      - description: The source site.
        in: query
        name: src_site
        schema:
          type: string
      - description: The destination site.
        in: query
        name: dest_site
        schema:
          type: string
      - description: The accepted request states. Delimited by comma.
        in: query
        name: request_states
        schema:
          type: string
      responses:
        '200':
          content:
            application/x-json-stream:
              schema:
                description: All requests matching the arguments. Seperated by the
                  new line character.
                items:
                  description: A request.
                  properties:
                    account:
                      description: The account which issued the request.
                      type: string
                    activity:
                      description: The activity of the request.
                      type: string
                    adler32:
                      description: The adler32 checksum of the did to transfer.
                      type: string
                    attributes:
                      description: All attributes associated with the request.
                      type: string
                    bytes:
                      description: The size of the did in bytes.
                      type: integer
                    dest_rse:
                      description: The name of the destination RSE.
                      type: string
                    dest_rse_id:
                      description: The destination RSE id.
                      type: string
                    dest_url:
                      description: The destination url.
                      type: string
                    did_type:
                      description: The did type.
                      type: string
                    err_msg:
                      description: An error message if one occured.
                      type: string
                    estimated_at:
                      description: The time the request got estimated.
                      type: string
                    estimated_stated_at:
                      description: The estimation of the started at value.
                      type: string
                    estimated_transferred_at:
                      description: The estimation of the transfered at value.
                      type: string
                    external_host:
                      description: External host of the request.
                      type: string
                    external_id:
                      description: External id of the request.
                      type: string
                    id:
                      description: The id of the request.
                      type: strig
                    md5:
                      description: The md5 checksum of the did to transfer.
                      type: string
                    name:
                      description: The name of the transfer.
                      type: string
                    previous_attempt_id:
                      description: The id of the previous attempt.
                      type: string
                    priority:
                      description: The priority of the request.
                      type: integer
                    request_type:
                      description: The request type.
                      enum:
                      - T
                      - U
                      - D
                      - I
                      - O
                      type: string
                    requested_at:
                      description: The time the request got requested.
                      type: string
                    retry_count:
                      description: The numbers of attempted retires.
                      type: integer
                    rule_id:
                      description: The id of the associated replication rule.
                      type: string
                    scope:
                      description: The scope of the transfer.
                      type: string
                    source_rse:
                      description: The name of the source RSE.
                      type: string
                    source_rse_id:
                      description: The source RSE id.
                      type: string
                    staging_finished_at:
                      description: The time the staging got finished.
                      type: string
                    staging_started_at:
                      description: The time the staging got started.
                      type: string
                    started_at:
                      description: The time the request got started.
                      type: string
                    state:
                      description: The state of the request.
                      enum:
                      - Q
                      - G
                      - S
                      - F
                      - D
                      - L
                      - N
                      - O
                      - A
                      - M
                      - U
                      - W
                      - P
                      type: string
                    submitted_at:
                      description: The time the request got submitted.
                      type: string
                    submitter_id:
                      description: The id of the submitter.
                      type: string
                    transferred_at:
                      description: The time the request got transfered.
                      type: string
                    transfertool:
                      description: The transfertool used.
                      type: string
                  type: object
                type: array
          description: OK
        '401':
          description: Invalid Auth Token
        '404':
          description: Not found
        '406':
          description: Not acceptable
      summary: List Historic Requests
      tags:
      - Requests
  /requests/history/list:
    get:
      description: List historical requests for a given source and destination RSE
        or site.
      parameters:
      - description: The source rse.
        in: query
        name: src_rse
        schema:
          items:
            properties:
              rse_id:
                description: The id of the rse.
                type: string
            required:
            - rse_id
            type: object
          type: array
      - description: The destination rse.
        in: query
        name: dest_rse
        schema:
          items:
            properties:
              rse_id:
                description: The id of the rse.
                type: string
            required:
            - rse_id
            type: object
          type: array
      - description: The source site.
        in: query
        name: src_site
        schema:
          type: string
      - description: The destination site.
        in: query
        name: dest_site
        schema:
          type: string
      - description: The accepted request states. Delimited by comma.
        in: query
        name: request_states
        schema:
          type: string
      - default: 0
        description: The offset of the list.
        in: query
        name: offset
        schema:
          type: integer
      - default: 100
        description: The maximum number of items to return.
        in: query
        name: limit
        schema:
          type: integer
      responses:
        '200':
          content:
            application/x-json-stream:
              schema:
                description: All requests matching the arguments. Seperated by a new
                  line character.
                items:
                  description: A request.
                  properties:
                    account:
                      description: The account which issued the request.
                      type: string
                    activity:
                      description: The activity of the request.
                      type: string
                    adler32:
                      description: The adler32 checksum of the did to transfer.
                      type: string
                    attributes:
                      description: All attributes associated with the request.
                      type: string
                    bytes:
                      description: The size of the did in bytes.
                      type: integer
                    dest_rse:
                      description: The name of the destination RSE.
                      type: string
                    dest_rse_id:
                      description: The destination RSE id.
                      type: string
                    dest_url:
                      description: The destination url.
                      type: string
                    did_type:
                      description: The did type.
                      type: string
                    err_msg:
                      description: An error message if one occured.
                      type: string
                    estimated_at:
                      description: The time the request got estimated.
                      type: string
                    estimated_stated_at:
                      description: The estimation of the started at value.
                      type: string
                    estimated_transferred_at:
                      description: The estimation of the transfered at value.
                      type: string
                    external_host:
                      description: External host of the request.
                      type: string
                    external_id:
                      description: External id of the request.
                      type: string
                    id:
                      description: The id of the request.
                      type: strig
                    md5:
                      description: The md5 checksum of the did to transfer.
                      type: string
                    name:
                      description: The name of the transfer.
                      type: string
                    previous_attempt_id:
                      description: The id of the previous attempt.
                      type: string
                    priority:
                      description: The priority of the request.
                      type: integer
                    request_type:
                      description: The request type.
                      enum:
                      - T
                      - U
                      - D
                      - I
                      - O
                      type: string
                    requested_at:
                      description: The time the request got requested.
                      type: string
                    retry_count:
                      description: The numbers of attempted retires.
                      type: integer
                    rule_id:
                      description: The id of the associated replication rule.
                      type: string
                    scope:
                      description: The scope of the transfer.
                      type: string
                    source_rse:
                      description: The name of the source RSE.
                      type: string
                    source_rse_id:
                      description: The source RSE id.
                      type: string
                    staging_finished_at:
                      description: The time the staging got finished.
                      type: string
                    staging_started_at:
                      description: The time the staging got started.
                      type: string
                    started_at:
                      description: The time the request got started.
                      type: string
                    state:
                      description: The state of the request.
                      enum:
                      - Q
                      - G
                      - S
                      - F
                      - D
                      - L
                      - N
                      - O
                      - A
                      - M
                      - U
                      - W
                      - P
                      type: string
                    submitted_at:
                      description: The time the request got submitted.
                      type: string
                    submitter_id:
                      description: The id of the submitter.
                      type: string
                    transferred_at:
                      description: The time the request got transfered.
                      type: string
                    transfertool:
                      description: The transfertool used.
                      type: string
                  type: object
                type: array
          description: OK
        '401':
          description: Invalid Auth Token
        '404':
          description: Not found
        '406':
          description: Not acceptable
      summary: List Historic Requests
      tags:
      - Requests
  /rses/{rse}/attr/{key}:
    post:
      description: Create a RSE attribute with given RSE name.
      parameters:
      - description: The name of the Rucio Storage Element name.
        in: path
        name: rse
        required: true
        schema:
          type: string
        style: simple
      - description: The name of the attribute of the RSE.
        in: path
        name: key
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              properties:
                value:
                  description: The value of the RSE attribute.
                  type: string
              required:
              - value
              type: object
      responses:
        '201':
          content:
            application/json:
              schema:
                enum:
                - Created
                type: string
          description: OK
        '400':
          description: Cannot decode json parameter dictionary
        '401':
          description: Invalid Auth Token
        '404':
          description: RSE not found
        '409':
          description: Attribute already exists
      summary: Create RSE Attribute
      tags:
      - Rucio Storage Elements
    delete:
      description: Delete an RSE attribute for given RSE name.
      parameters:
      - description: The name of the Rucio Storage Element name.
        in: path
        name: rse
        required: true
        schema:
          type: string
        style: simple
      - description: The name of the attribute of the RSE.
        in: path
        name: key
        required: true
        schema:
          type: string
        style: simple
      responses:
        '200':
          description: OK
        '401':
          description: Invalid Auth Token
        '404':
          description: RSE or RSE attribute not found
      summary: Delete RSE Attribute
      tags:
      - Rucio Storage Elements
  /rses/{source}/distances/{destination}:
    get:
      description: Returns the distances between a source and destination rse.
      parameters:
      - description: The name of the source Rucio Storage Element.
        in: path
        name: source
        required: true
        schema:
          type: string
        style: simple
      - description: The name of the destination Rucio Storage Element.
        in: path
        name: destination
        required: true
        schema:
          type: string
        style: simple
      responses:
        '200':
          content:
            application/json:
              schema:
                description: The distances between the Rses.
                items:
                  description: One distance betweeen source and destination.
                  properties:
                    agis_distance:
                      description: The agis distance.
                      type: integer
                    dest_rse_id:
                      description: The destination rse id.
                      type: string
                    geoip_distance:
                      description: The geo ip distance.
                      type: integer
                    ranking:
                      description: The ranking.
                      type: integer
                    src_rse_id:
                      description: The source rse id.
                      type: string
                  type: object
                type: array
          description: OK
        '401':
          description: Invalid Auth Token
        '404':
          description: Rse not found
        '406':
          description: Not acceptable
      summary: Get Rse Distances
      tags:
      - Rucio Storage Elements
    post:
      description: Post a rse distance.
      parameters:
      - description: The name of the source Rucio Storage Element.
        in: path
        name: source
        required: true
        schema:
          type: string
        style: simple
      - description: The name of the destination Rucio Storage Element.
        in: path
        name: destination
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              properties:
                active:
                  description: If the distance is active.
                  type: boolean
                distance:
                  description: The distance between the Rses.
                  type: integer
                failed:
                  description: If the distance failed.
                  type: boolean
                finished:
                  description: If the distance is finished.
                  type: boolean
                geoip_distance:
                  description: The geoip distance between the Rses.
                  type: integer
                ranking:
                  description: The ranking of the distance.
                  type: integer
                submitted:
                  description: If the distance is submitted.
                  type: boolean
                transfer_speed:
                  description: The transferspeed between the Rses.
                  type: integer
              type: object
      responses:
        '201':
          content:
            application/json:
              schema:
                enum:
                - Created
                type: string
          description: OK
        '401':
          description: Invalid Auth Token
        '404':
          description: Rse not found
        '406':
          description: Not acceptable
      summary: Create Rse Distance
      tags:
      - Rucio Storage Elements
    delete:
      description: Delete distance information between source RSE and destination
        RSE.
      parameters:
      - description: The name of the source Rucio Storage Element.
        in: path
        name: source
        required: true
        schema:
          type: string
        style: simple
      - description: The name of the destination Rucio Storage Element.
        in: path
        name: destination
        required: true
        schema:
          type: string
        style: simple
      responses:
        '200':
          content:
            application/json:
              schema:
                enum:
                - Deleted
                type: string
          description: OK
        '401':
          description: Invalid Auth Token
        '404':
          description: Rse not found
        '406':
          description: Not acceptable
      summary: Delete Rse Distance
      tags:
      - Rucio Storage Elements
    put:
      description: Update rse distance information.
      parameters:
      - description: The name of the source Rucio Storage Element.
        in: path
        name: source
        required: true
        schema:
          type: string
        style: simple
      - description: The name of the destination Rucio Storage Element.
        in: path
        name: destination
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              properties:
                active:
                  description: If the distance is active.
                  type: boolean
                agis_distance:
                  description: The distance between the Rses.
                  type: integer
                failed:
                  description: If the distance failed.
                  type: boolean
                finished:
                  description: If the distance is finished.
                  type: boolean
                geoip_distance:
                  description: The geoip distance between the Rses.
                  type: integer
                ranking:
                  description: The ranking of the distance.
                  type: integer
                submitted:
                  description: If the distance is submitted.
                  type: boolean
                transfer_speed:
                  description: The transferspeed between the Rses.
                  type: integer
              type: object
      responses:
        '201':
          content:
            application/json:
              schema:
                enum:
                - Created
                type: string
          description: OK
        '401':
          description: Invalid Auth Token
        '404':
          description: Rse not found
        '406':
          description: Not acceptable
      summary: Update Rse Distance
      tags:
      - Rucio Storage Elements
  /rses/{rse}/protocols/{scheme}/{hostname}/{port}:
    delete:
      description: Delete all protocol attibutes.
      parameters:
      - description: The name of the Rucio Storage Element name.
        in: path
        name: rse
        required: true
        schema:
          type: string
        style: simple
      - description: The protocol identifier.
        in: path
        name: scheme
        required: true
        schema:
          type: string
        style: simple
      - description: The hostname of the protocol.
        in: path
        name: hostname
        required: true
        schema:
          type: string
        style: simple
      - description: The port of the protocol.
        in: path
        name: port
        required: true
        schema:
          type: integer
        style: simple
      responses:
        '200':
          description: OK
        '401':
          description: Invalid Auth Token
        '404':
          description: Rse not found or protocol not supported
      summary: Delete Protocol Attributes
      tags:
      - Rucio Storage Elements
    put:
      description: Updates attributes of an existing protocol entry. Because protocol
        identifier, hostname, and port are used as unique identifier they are immutable.
      parameters:
      - description: The name of the Rucio Storage Element name.
        in: path
        name: rse
        required: true
        schema:
          type: string
        style: simple
      - description: The protocol identifier.
        in: path
        name: scheme
        required: true
        schema:
          type: string
        style: simple
      - description: The hostname of the protocol.
        in: path
        name: hostname
        required: true
        schema:
          type: string
        style: simple
      - description: The port of the protocol.
        in: path
        name: port
        required: true
        schema:
          type: integer
        style: simple
      responses:
        '200':
          content:
            application/json:
              schema:
                description: A dict with RSE information and supported protocols.
                properties:
                  availability_delete:
                    description: The delete availability of the RSE.
                    type: boolean
                  availability_read:
                    description: The read availability of the RSE.
                    type: boolean
                  availability_write:
                    description: The write availability of the RSE.
                    type: boolean
                  credentials:
                    description: The credentials, currently None.
                    type: string
                  deterministic:
                    description: If the pfn is generated deterministicly.
                    type: boolean
                  domain:
                    description: The domains of the RSE protocols.
                    type: array
                  id:
                    description: The RSE id.
                    type: string
                  lfn2pfn_algorithm:
                    description: The algorithm used to translate the logical file
                      names to the physical ones.
                    type: string
                  protocols:
                    description: All supported protocols of the RSE.
                    items:
                      description: A supported RSE protocol.
                      properties:
                        domains:
                          description: The domains of the protocol.
                          properties:
                            lan:
                              description: The lan domain
                              properties:
                                delete:
                                  description: The delete value of the lan protocol.
                                  type: integer
                                read:
                                  description: The read value of the lan protocol.
                                  type: integer
                                write:
                                  description: The write value of the lan protocol.
                                  type: integer
                              type: object
                            wan:
                              delete:
                                description: The read value of the wan protocol.
                                type: integer
                              read:
                                description: The read value of the wan protocol.
                                type: integer
                              third_party_copy:
                                description: The third party copy value of the wan
                                  protocol.
                                type: integer
                              third_party_copy_read:
                                description: The third party copy read value of the
                                  wan protocol.
                                type: integer
                              third_party_copy_write:
                                description: The third party copy write value of the
                                  wan protocol.
                                type: integer
                              write:
                                description: The read value of the wan protocol.
                                type: integer
                          type: object
                        extended_attributes:
                          description: The extended attributes of the protocol.
                          type: string
                        hostname:
                          description: The hostname of the protocol.
                          type: string
                        impl:
                          description: The implementation of the protocol.
                          type: string
                        port:
                          description: The port of the protocol.
                          type: integer
                        prefix:
                          description: The prefix of the protocol.
                          type: string
                        scheme:
                          description: The scheme of the protocol.
                          type: string
                      type: object
                    type: array
                  qos_class:
                    description: The qos class of the RSE.
                    type: string
                  rse:
                    description: The name of the RSE.
                    type: string
                  rse_type:
                    description: The rse type.
                    enum:
                    - DISK
                    - TAPE
                    type: string
                  sign_url:
                    description: The sign url of the RSE.
                    type: string
                  staging_area:
                    description: Staging area.
                    type: string
                  verify_checksum:
                    description: If the checksum of the files should be verified.
                    type: boolean
                  volatile:
                    description: RSE cache.
                    type: boolean
                type: object
          description: OK
        '401':
          description: Invalid Auth Token
        '404':
          description: RSE not found or Protocol or Protocol domain not Supported.
        '406':
          description: Not acceptable
      summary: Update Protocol Attributes
      tags:
      - Rucio Storage Elements
  /rses/{rse}/protocols:
    get:
      description: List all supported protocols of the given RSE.
      parameters:
      - description: The name of the Rucio Storage Element name.
        in: path
        name: rse
        required: true
        schema:
          type: string
        style: simple
      responses:
        '200':
          content:
            application/json:
              schema:
                description: Supported RSE Protocols and other information.
                properties:
                  availability_delete:
                    description: The delete availability of the RSE.
                    type: boolean
                  availability_read:
                    description: The read availability of the RSE.
                    type: boolean
                  availability_write:
                    description: The write availability of the RSE.
                    type: boolean
                  credentials:
                    description: The credentials, currently None.
                    type: string
                  deterministic:
                    description: If the pfn is generated deterministicly.
                    type: boolean
                  domain:
                    description: The domains of the RSE protocols.
                    type: array
                  id:
                    description: The RSE id.
                    type: string
                  lfn2pfn_algorithm:
                    description: The algorithm used to translate the logical file
                      names to the physical ones.
                    type: string
                  protocols:
                    description: All supported protocols of the RSE.
                    items:
                      description: A supported RSE protocol.
                      properties:
                        domains:
                          description: The domains of the protocol.
                          properties:
                            lan:
                              description: The lan domain
                              properties:
                                delete:
                                  description: The delete value of the lan protocol.
                                  type: integer
                                read:
                                  description: The read value of the lan protocol.
                                  type: integer
                                write:
                                  description: The write value of the lan protocol.
                                  type: integer
                              type: object
                            wan:
                              delete:
                                description: The read value of the wan protocol.
                                type: integer
                              read:
                                description: The read value of the wan protocol.
                                type: integer
                              third_party_copy:
                                description: The third party copy value of the wan
                                  protocol.
                                type: integer
                              third_party_copy_read:
                                description: The third party copy read value of the
                                  wan protocol.
                                type: integer
                              third_party_copy_write:
                                description: The third party copy write value of the
                                  wan protocol.
                                type: integer
                              write:
                                description: The read value of the wan protocol.
                                type: integer
                          type: object
                        extended_attributes:
                          description: The extended attributes of the protocol.
                          type: string
                        hostname:
                          description: The hostname of the protocol.
                          type: string
                        impl:
                          description: The implementation of the protocol.
                          type: string
                        port:
                          description: The port of the protocol.
                          type: integer
                        prefix:
                          description: The prefix of the protocol.
                          type: string
                        scheme:
                          description: The scheme of the protocol.
                          type: string
                      type: object
                    type: array
                  qos_class:
                    description: The qos class of the RSE.
                    type: string
                  rse:
                    description: The name of the RSE.
                    type: string
                  rse_type:
                    description: The rse type.
                    enum:
                    - DISK
                    - TAPE
                    type: string
                  sign_url:
                    description: The sign url of the RSE.
                    type: string
                  staging_area:
                    description: Staging area.
                    type: string
                  verify_checksum:
                    description: If the checksum of the files should be verified.
                    type: boolean
                  volatile:
                    description: RSE cache.
                    type: boolean
                type: object
          description: OK
        '401':
          description: Invalid Auth Token
        '404':
          description: RSE not found or RSE Operation, RSE Protocal Doman, RSE Protocol
            not supported
        '406':
          description: Not acceptable
      summary: List RSE Protocols
      tags:
      - Rucio Storage Elements
  /rses/{rse}/lfns2pfns:
    get:
      description: Return PFNs for a set of LFNs.  Formatted as a JSON object where
        the key is a LFN and the value is the corresponding PFN.
      parameters:
      - description: The name of the Rucio Storage Element name.
        in: path
        name: rse
        required: true
        schema:
          type: string
        style: simple
      - description: The protocol identifier.
        in: path
        name: schema
        required: true
        schema:
          type: string
        style: simple
      - description: The lfns of the request.
        in: query
        name: lfn
        required: true
        schema:
          type: string
      - description: Optional argument to help with the protocol selection (e.g.,
          http / gsiftp / srm)
        in: query
        name: scheme
        schema:
          type: string
      - description: Optional argument used to select the protocol for wan or lan
          use cases.
        in: query
        name: domain
        schema:
          type: string
      - description: Optional query argument to select the protoco for read-vs-writes.
        in: query
        name: operation
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties:
                  type: string
                description: The PFNs to the LFNs. Dictionary with lfns as keys and
                  pfns as values.
                type: object
          description: OK
        '401':
          description: Invalid Auth Token
        '404':
          description: RSE not found or RSE Protocol or RSE Protocl Domain not supported
        '406':
          description: Not acceptable
      summary: Translate LFNs to PFNs
      tags:
      - Rucio Storage Elements
  /rses/{rse}/accounts/usage:
    get:
      description: Returns the usage and limit of an account for a rse.
      parameters:
      - description: The name of the Rucio Storage Element name.
        in: path
        name: rse
        required: true
        schema:
          type: string
        style: simple
      responses:
        '200':
          content:
            application/json:
              schema:
                description: A list with the rse account limits and usages.
                items:
                  properties:
                    account:
                      description: The account.
                      type: string
                    quota_bytes:
                      description: The number of quota bytes.
                      type: integer
                    rse:
                      description: The name of the rse.
                      type: string
                    rse_id:
                      description: The id of the rse.
                      type: string
                    used_bytes:
                      description: The number of used bytes.
                      type: integer
                    used_files:
                      description: The number of used files.
                      type: integer
                  type: object
                type: array
          description: OK
        '401':
          description: Invalid Auth Token
        '404':
          description: Rse not found
        '406':
          description: Not acceptable
      summary: Get Rse Account Usage and Limit
      tags:
      - Rucio Storage Elements
  /rses/{rse}/usage:
    get:
      description: Get rse usage information.
      parameters:
      - description: The name of the Rucio Storage Element name.
        in: path
        name: rse
        required: true
        schema:
          type: string
        style: simple
      - description: Boolean whether the usage should be also calculated per account
          or not.
        in: query
        name: per_account
        schema:
          type: boolean
      - description: The information source, e.g., srm.
        in: query
        name: source
        schema:
          type: string
      responses:
        '200':
          content:
            application/x-json-stream:
              schema:
                description: A list with the rse usage.
                items:
                  properties:
                    files:
                      description: The number of files.
                      type: integer
                    free:
                      description: The number of free bytes.
                      type: integer
                    rse:
                      description: The name of the rse.
                      type: string
                    rse_id:
                      description: The id of the rse.
                      type: string
                    source:
                      description: The source of the rse.
                      type: string
                    total:
                      description: The number of total bytes.
                      type: integer
                    updated_at:
                      description: The last time it got updated.
                      type: string
                    used:
                      description: The number of used bytes.
                      type: integer
                  type: object
                type: array
          description: OK
        '401':
          description: Invalid Auth Token
        '404':
          description: Rse not found
        '406':
          description: Not acceptable
      summary: Get Rse Usage Information
      tags:
      - Rucio Storage Elements
    put:
      description: Update the RSE Update information.
      parameters:
      - description: The name of the Rucio Storage Element name.
        in: path
        name: rse
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              properties:
                files:
                  description: The number of files.
                  type: integer
                free:
                  description: The number of free bytes.
                  type: integer
                source:
                  description: The information source, e.g. srm.
                  type: string
                used:
                  description: The number of used bytes.
                  type: integer
              type: object
      responses:
        '200':
          description: OK
        '400':
          description: Can not decode json parameter list.
        '401':
          description: Invalid Auth Token
        '404':
          description: Rse not found
        '406':
          description: Not acceptable
      summary: Update Rse Usage
      tags:
      - Rucio Storage Elements
  /rses/{rse}/usage/history:
    get:
      description: Get the rse usage history
      parameters:
      - description: The name of the Rucio Storage Element name.
        in: path
        name: rse
        required: true
        schema:
          type: string
        style: simple
      responses:
        '200':
          content:
            application/x-json-stream:
              schema:
                description: A list with the rse usage history items.
                items:
                  properties:
                    free:
                      description: The number of free bytes.
                      type: integer
                    rse:
                      description: The name of the rse.
                      type: string
                    rse_id:
                      description: The id of the rse.
                      type: string
                    source:
                      description: The source of the rse.
                      type: string
                    total:
                      description: The number of total bytes.
                      type: integer
                    updated_at:
                      description: The last time it got updated.
                      type: string
                    used:
                      description: The number of used bytes.
                      type: integer
                  type: object
                type: array
          description: OK
        '401':
          description: Invalid Auth Token
        '404':
          description: Rse not found
        '406':
          description: Not acceptable
      summary: Get Rse Usage History
      tags:
      - Rucio Storage Elements
  /rses/{rse}/limits:
    get:
      description: Get the rse limits.
      parameters:
      - description: The name of the Rucio Storage Element name.
        in: path
        name: rse
        required: true
        schema:
          type: string
        style: simple
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties:
                  description: An item with the name as key and the value as value.
                  type: integer
                  x-additionalPropertiesName: limit name
                description: The limits.
                type: object
          description: OK
        '401':
          description: Invalid Auth Token
        '404':
          description: Rse not found
        '406':
          description: Not acceptable
      summary: Get Rse Limits
      tags:
      - Rucio Storage Elements
    delete:
      description: Delete an rse limit
      parameters:
      - description: The name of the Rucio Storage Element name.
        in: path
        name: rse
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              properties:
                name:
                  description: The name of the limit.
                  type: string
              required:
              - name
              type: object
      responses:
        '200':
          description: OK
        '401':
          description: Invalid Auth Token
        '404':
          description: Rse not found
        '406':
          description: Not acceptable
      summary: Delete Rse Limit
      tags:
      - Rucio Storage Elements
    put:
      description: Update an rse limit.
      parameters:
      - description: The name of the Rucio Storage Element name.
        in: path
        name: rse
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              properties:
                name:
                  description: The name of the limit.
                  type: string
                value:
                  description: The value of the limit.
                  type: integer
              type: object
      responses:
        '200':
          description: OK
        '401':
          description: Invalid Auth Token
        '404':
          description: Rse not found
        '406':
          description: Not acceptable
      summary: Update Rse Limit
      tags:
      - Rucio Storage Elements
  /rses/{rse}/qos_policy/{policy}:
    post:
      description: Add a QoS Policy to a RSE.
      parameters:
      - description: The name of the Rucio Storage Element name.
        in: path
        name: rse
        required: true
        schema:
          type: string
        style: simple
      - description: The QoS policy to add to and rse.
        in: path
        name: policy
        required: true
        schema:
          type: string
        style: simple
      responses:
        '201':
          content:
            application/json:
              schema:
                enum:
                - Created
                type: string
          description: OK
        '401':
          description: Invalid Auth Token
        '404':
          description: Rse not found
        '406':
          description: Not acceptable
      summary: Add QoS policy
      tags:
      - Rucio Storage Elements
    delete:
      description: Delete QoS policy from RSE.
      parameters:
      - description: The name of the Rucio Storage Element name.
        in: path
        name: rse
        required: true
        schema:
          type: string
        style: simple
      - description: The QoS policy to add to and rse.
        in: path
        name: policy
        required: true
        schema:
          type: string
        style: simple
      responses:
        '200':
          description: OK
        '401':
          description: Invalid Auth Token
        '404':
          description: Rse not found
        '406':
          description: Not acceptable
      summary: Delete QoS Policy
      tags:
      - Rucio Storage Elements
  /rses/{rse}:
    get:
      description: Get details about a specific RSE.
      parameters:
      - description: The name of the Rucio Storage Element name.
        in: path
        name: rse
        required: true
        schema:
          type: string
        style: simple
      responses:
        '200':
          content:
            application/json:
              schema:
                description: The RSE properties.
                properties:
                  ASN:
                    description: The access service network of the RSE.
                    type: string
                  ISP:
                    description: The internet service provider of the RSE.
                    type: string
                  availability:
                    description: The availability of the RSE.
                    type: integer
                  city:
                    description: The city of the RSE.
                    type: string
                  continent:
                    description: The continent of the RSE.
                    type: string
                  country_name:
                    description: The country name of the RSE.
                    type: string
                  deterministic:
                    description: If the pfn is generated deterministicly.
                    type: boolean
                  latitute:
                    description: The latitute of the RSE.
                    type: float
                  longitude:
                    description: The longitude of the RSE.
                    type: float
                  region_code:
                    description: The region code of the RSE.
                    type: string
                  rse_type:
                    description: The rse type.
                    enum:
                    - DISK
                    - TAPE
                    type: string
                  staging_area:
                    description: Staging area.
                    type: string
                  time_zone:
                    description: The time zone of the RSE.
                    type: string
                  volatile:
                    description: RSE cache.
                    type: boolean
                type: object
          description: OK
        '401':
          description: Invalid Auth Token
        '404':
          description: RSE not found
        '406':
          description: Not acceptable
      summary: Get RSE
      tags:
      - Rucio Storage Elements
    post:
      description: Creates a RSE with all the metadata.
      parameters:
      - description: The name of the Rucio Storage Element name.
        in: path
        name: rse
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              properties:
                ASN:
                  description: The access service network of the RSE.
                  type: string
                ISP:
                  description: The internet service provider of the RSE.
                  type: string
                availability:
                  description: The availability of the RSE.
                  type: integer
                city:
                  description: The city of the RSE.
                  type: string
                continent:
                  description: The continent of the RSE.
                  type: string
                country_name:
                  description: The country name of the RSE.
                  type: string
                deterministic:
                  description: If the pfn is generated deterministicly.
                  type: boolean
                latitute:
                  description: The latitute of the RSE.
                  type: float
                longitude:
                  description: The longitude of the RSE.
                  type: float
                region_code:
                  description: The region code of the RSE.
                  type: string
                rse_type:
                  description: The rse type.
                  enum:
                  - DISK
                  - TAPE
                  type: string
                staging_area:
                  description: Staging area.
                  type: string
                time_zone:
                  description: The time zone of the RSE.
                  type: string
                volatile:
                  description: RSE cache.
                  type: boolean
              type: object
      responses:
        '201':
          content:
            application/json:
              schema:
                enum:
                - Created
                type: string
          description: OK
        '400':
          description: Cannot decode json parameter dictionary
        '401':
          description: Invalid Auth Token
        '404':
          description: RSE not found
        '409':
          description: RSE already exists.
      summary: Create RSE
      tags:
      - Rucio Storage Elements
    delete:
      description: Disable a specific RSE.
      parameters:
      - description: The name of the Rucio Storage Element name.
        in: path
        name: rse
        required: true
        schema:
          type: string
        style: simple
      responses:
        '200':
          description: OK
        '401':
          description: Invalid Auth Token
        '404':
          description: RSE not found
      summary: Disable RSE
      tags:
      - Rucio Storage Elements
    put:
      description: Update RSE properties.
      parameters:
      - description: The name of the Rucio Storage Element name.
        in: path
        name: rse
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              properties:
                availability_delete:
                  description: The vailability of the RSE.
                  type: boolean
                availability_raed:
                  description: The vailability of the RSE.
                  type: boolean
                availability_write:
                  description: The vailability of the RSE.
                  type: boolean
                city:
                  description: The city of the RSE.
                  type: string
                country_name:
                  description: The country name of the RSE.
                  type: string
                deterministic:
                  description: If the pfn is generated deterministicly.
                  type: boolean
                latitute:
                  description: The latitute of the RSE.
                  type: float
                longitude:
                  description: The longitude of the RSE.
                  type: float
                region_code:
                  description: The region code of the RSE.
                  type: string
                rse_type:
                  description: The rse type.
                  enum:
                  - DISK
                  - TAPE
                  type: string
                staging_area:
                  description: Staging area.
                  type: string
                time_zone:
                  description: The time zone of the RSE.
                  type: string
                volatile:
                  description: RSE cache.
                  type: boolean
              type: object
      responses:
        '201':
          content:
            application/json:
              schema:
                enum:
                - Created
                type: string
          description: OK
        '400':
          description: Cannot decode json parameter dictionary or invalid option provided
        '401':
          description: Invalid Auth Token
        '404':
          description: RSE not found
      summary: Update RSE
      tags:
      - Rucio Storage Elements
  /rses/:
    get:
      description: Lists all RSEs.
      requestBody:
        content:
          application/json:
            schema:
              properties:
                expression:
                  description: An RSE expression.
                  type: string
              type: object
      responses:
        '200':
          content:
            application/json:
              schema:
                description: A list with the corresponding rses.
                items:
                  properties:
                    ASN:
                      description: The asn of the rse.
                      type: string
                    ISP:
                      description: The isp of the rse.
                      type: string
                    availability:
                      description: The availability of the rse.
                      type: integer
                    city:
                      description: The city of the rse.
                      type: string
                    continent:
                      description: The continent of the rse.
                      type: string
                    country_name:
                      description: The country name of the rse.
                      type: string
                    deterministic:
                      description: If the rse is deterministic.
                      type: boolean
                    id:
                      description: The rse id.
                      type: string
                    latitude:
                      description: The latitude of the rse.
                      type: number
                    longitude:
                      description: The longitude of the rse.
                      type: number
                    qos_class:
                      description: The quality of service class.
                      type: string
                    region_code:
                      description: The region_code of the rse.
                      type: string
                    rse:
                      description: The name of the rse.
                      type: string
                    rse_type:
                      description: The type of the rse.
                      type: string
                    staging_area:
                      description: Is this rse a staging area?
                      type: boolean
                    time_zone:
                      description: The time zone of the rse.
                      type: string
                    usage:
                      description: The usage of the rse.
                      type: integer
                    volatile:
                      description: If the rse is volatile.
                      type: boolean
                  type: object
                type: array
          description: OK
        '400':
          description: Invalid RSE expression
        '401':
          description: Invalid Auth Token
        '406':
          description: Not acceptable
      summary: List RSEs
      tags:
      - Rucio Storage Elements
  /rules/{rule_id}:
    get:
      parameters:
      - description: The id of the replication rule.
        in: path
        name: rule_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        '200':
          content:
            application/json:
              schema:
                type: string
          description: OK
        '406':
          description: Not Acceptable
        '401':
          description: Invalid Auth Token
        '404':
          description: No rule found for the given id
      summary: Return a Rule
      tags:
      - Rule
    delete:
      parameters:
      - description: The id of the replication rule.
        in: path
        name: rule_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        '200':
          description: OK
        '401':
          description: Invalid Auth Token
        '404':
          description: No rule found for the given id
      summary: Delete a replication rule
      tags:
      - Rule
    put:
      parameters:
      - description: The id of the replication rule.
        in: path
        name: rule_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              properties:
                options:
                  description: The parameters to change.
                  properties:
                    account:
                      description: The account of the replication rule.
                      type: string
                    activity:
                      description: The activity of a replication rule.
                      type: string
                    boost_rule:
                      description: Boosts the processing of a rule.
                      type: object
                    cancel_requests:
                      description: Cancels all requests if used together with state.
                      type: boolean
                    child_rule_id:
                      description: The child rule. Parent and child rule must be on
                        the same dataset.
                      type: string
                    comment:
                      description: The comment of the replication rule.
                      type: string
                    eol_at:
                      description: The end of life of a replication rule.
                      type: string
                    lifetime:
                      description: The time in which the rule will expire in seconds.
                      type: integer
                    locked:
                      description: The locked state of the replication rule.
                      type: boolean
                    meta:
                      description: The meta of a rule.
                      type: object
                    priority:
                      description: The priority of a rule.
                      type: integer
                    purge_replicas:
                      description: Purge replicas
                      type: boolean
                    source_replica_expression:
                      description: The source replica expression of a replication
                        rule.
                      type: string
                    state:
                      description: The state of the replication rule.
                      type: string
                  type: object
              required:
              - options
              type: object
        description: Parameters for the new rule.
      responses:
        '200':
          description: OK
        '401':
          description: Invalid Auth Token
        '404':
          description: No rule found for the given id
      summary: Update the replication rules parameters
      tags:
      - Rule
  /rules/:
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                type: string
          description: OK
        '401':
          description: Invalid Auth Token
        '404':
          description: No rule found for the given id
        '406':
          description: Not Acceptable
      summary: Return all rules for a given account
      tags:
      - Rule
    post:
      requestBody:
        content:
          application/json:
            schema:
              properties:
                account:
                  descipriton: The account of the issuer.
                  type: string
                activity:
                  description: Activity to be passed to the conveyor.
                  type: string
                ask_approval:
                  description: Ask for approval for this rule.
                  type: boolean
                asynchronous:
                  description: Create replication rule asynchronously by the judge-injector.
                  type: boolean
                comments:
                  description: Comment about the rule.
                  type: string
                copies:
                  description: The number of replicas.
                  type: integer
                dids:
                  description: The list of data identifiers.
                  items:
                    type: string
                  type: array
                grouping:
                  description: The grouping of the files to take into account. (ALL,
                    DATASET, NONE)
                  type: string
                ignore_availability:
                  description: Option to ignore the availability of RSEs.
                  type: boolean
                lifetime:
                  description: The lifetime of the replication rule in seconds.
                  type: integer
                locked:
                  description: If the rule is locked.
                  type: boolean
                meta:
                  description: Dictionary with metadata from the WFMS.
                  type: string
                notify:
                  description: Notification setting of the rule ('Y', 'N', 'C'; None
                    = 'N').
                  type: string
                priority:
                  description: Priority of the rule and the transfers which should
                    be submitted.
                  type: integer
                purge_replicas:
                  description: Purge setting if a replica should be directly deleted
                    after the rule is deleted.
                  type: boolean
                rse_expression:
                  description: The rse expression which gets resolved into a list
                    of RSEs.
                  type: string
                sourse_replica_expression:
                  description: Only use replicas as source from these RSEs.
                  type: string
                split_container:
                  description: Should a container rule be split into individual dataset
                    rules.
                  type: boolean
                subscription_id:
                  description: The subscription_id, if the rule is created by a subscription.
                  type: string
                weight:
                  description: Weighting scheme to be used.
                  type: number
              required:
              - dids
              - account
              - copies
              - rse_expression
              type: object
        description: Parameters for the new rule.
      responses:
        '201':
          content:
            application/json:
              schema:
                items:
                  description: Id of each created rule.
                  type: string
                type: array
          description: Rule created.
        '401':
          description: Invalid Auth Token
        '404':
          description: No rule found for the given id
        '409':
          description: '- Invalid Replication Rule

            - Duplicate Replication Rule

            - Insufficient Target RSEs

            - Insufficient Account Limit

            - Invalid RSE Expression

            - Replication Rule Creation Temporary Failed,

            - Invalid Rule Weight

            - Staging Area Rule Requires Lifetime

            - Scratch Disk Lifetime Conflict

            - Manual Rule Approval Blocked

            - Invalid Object'
      summary: Create a new replication rule
      tags:
      - Rule
  /rules/{rule_id}/locks:
    get:
      parameters:
      - description: The id of the replication rule.
        in: path
        name: rule_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  properties:
                    name:
                      description: The name of the lock.
                      type: string
                    rse:
                      description: Information about the rse of the lock.
                      type: object
                    rse_id:
                      description: The rse_id of the lock.
                      type: string
                    rule_id:
                      description: The rule_id of the lock.
                      type: string
                    scope:
                      description: The scope of the lock.
                      type: string
                    state:
                      description: The state of the lock.
                      type: string
                  type: object
                type: array
          description: OK
        '401':
          description: Invalid Auth Token
        '404':
          description: No rule found for the given id
        '406':
          description: Not Acceptable
      summary: Return all locks for a Rule
      tags:
      - Rule
  /rules/{rule_id}/reduce:
    post:
      parameters:
      - description: The id of the replication rule.
        in: path
        name: rule_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              properties:
                copies:
                  description: Number of copies to keep.
                  type: integer
              required:
              - copies
              type: object
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  description: Rule id.
                  type: string
                type: array
          description: OK
        '401':
          description: Invalid Auth Token
        '404':
          description: No rule found for the given id
        '409':
          description: Rule replace failed.
      summary: Reduce a replication rule
      tags:
      - Rule
  /rules/{rule_id}/move:
    post:
      parameters:
      - description: The id of the replication rule.
        in: path
        name: rule_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              properties:
                activity:
                  description: The `activity` of the moved rule.
                  type: string
                rse_expression:
                  description: The new rse expression.
                  type: string
                rule_id:
                  description: The rule_id of the rule to moves. If specified, overrides
                    the `rule_id` parameter.
                  type: string
                source_replica_expression:
                  description: The `source_replica_expression` of the moved rule.
                  type: string
              required:
              - rse_expression
              type: object
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  description: Rule id.
                  type: string
                type: array
          description: OK
        '401':
          description: Invalid Auth Token
        '404':
          description: No rule found for the given id
        '409':
          description: Rule replace failed.
      summary: Move a replication Rule
      tags:
      - Rule
  /rules/{rule_id}/history:
    get:
      parameters:
      - description: The id of the replication rule.
        in: path
        name: rule_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  description: Rule history object.
                  properties:
                    locks_ok_cnt:
                      description: The number of locks which are ok.
                      type: integer
                    locks_replicating_cnt:
                      description: The number of locks which are replicating.
                      type: integer
                    locks_stuck_cnt:
                      description: The number of locks which are stuck.
                      type: integer
                    state:
                      descipriton: The state of the update.
                      type: string
                    updated_at:
                      description: The date of the update.
                      type: string
                  type: object
                type: array
          description: OK
        '401':
          description: Invalid Auth Token
        '404':
          description: No rule found for the given id
        '406':
          description: Not acceptable.
      summary: Get the history of a rule
      tags:
      - Rule
  /rules/{scope_name}/history:
    get:
      parameters:
      - description: The data identifier of scope-name to retrieve the history from.
          ((scope)/(name))
        in: path
        name: scope_name
        required: true
        schema:
          type: string
        style: simple
      responses:
        '200':
          content:
            application/x-json-stream:
              schema:
                items:
                  description: Rule history object.
                  properties:
                    account:
                      descipriton: The account who initiated the change.
                      type: string
                    created_at:
                      description: The date of the creation.
                      type: string
                    locks_ok_cnt:
                      description: The number of locks which are ok.
                      type: integer
                    locks_replicating_cnt:
                      description: The number of locks which are replicating.
                      type: integer
                    locks_stuck_cnt:
                      description: The number of locks which are stuck.
                      type: integer
                    rse_expression:
                      description: The rse expression.
                      type: string
                    rule_id:
                      description: The id of the rule.
                      type: string
                    state:
                      descipriton: The state of the update.
                      type: string
                    updated_at:
                      description: The date of the update.
                      type: string
                  type: object
                type: array
          description: OK
        '401':
          description: Invalid Auth Token
        '406':
          description: Not acceptable.
      summary: Get the history of a DID
      tags:
      - Rule
  /rules/{rule_id}/analysis:
    get:
      parameters:
      - description: The id of the replication rule.
        in: path
        name: rule_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  rule_error:
                    description: The state of the rule.
                    type: string
                  transfers:
                    description: List of all transfer errors.
                    items:
                      properties:
                        attempts:
                          description: The number of attempts.
                          type: integer
                        last_error:
                          description: The last error that occured.
                          type: string
                        last_source:
                          description: The last source.
                          type: string
                        last_time:
                          description: The time of the last transfer.
                          type: string
                        name:
                          description: The name of the lock.
                          type: string
                        rse:
                          description: Information about the rse of the transfered
                            lock.
                          type: object
                        rse_id:
                          description: The rse_id of the transfered lock.
                          type: string
                        scope:
                          description: The scope of the transfer.
                          type: string
                        sources:
                          description: All available rse sources.
                          type: array
                      type: object
                    type: array
                type: object
          description: OK
        '401':
          description: Invalid Auth Token
        '404':
          description: No rule found for the given id
        '406':
          description: Not acceptable.
      summary: Get the analysis of a rule
      tags:
      - Rule
  /scopes/{account}/{scope}:
    post:
      description: Adds a new scope.
      parameters:
      - description: The account associated with the scope.
        in: path
        name: account
        required: true
        schema:
          type: string
        style: simple
      - description: The name of the scope.
        in: path
        name: scope
        required: true
        schema:
          type: string
        style: simple
      responses:
        '201':
          content:
            application/json:
              schema:
                enum:
                - Created
                type: string
          description: OK
        '401':
          description: Invalid Auth Token
        '404':
          description: Account not found
        '409':
          description: Scope already exists
      summary: Add Scope
      tags:
      - Scopes
  /scopes/{account}/scopes:
    get:
      description: List all scopes for an account.
      parameters:
      - description: The account associated with the scope.
        in: path
        name: account
        required: true
        schema:
          type: string
        style: simple
      responses:
        '200':
          content:
            application/json:
              schema:
                description: All scopes for the account.
                items:
                  description: A scope for the account.
                  type: string
                type: array
          description: OK
        '401':
          description: Invalid Auth Token
        '404':
          description: Account not found or no scopes
        '406':
          description: Not acceptable
      summary: List Account Scopes
      tags:
      - Scopes
  /subscriptions/Id/{subscription_id}:
    get: {}
  /subscriptions/{account}/{name}/Rules/States:
    get: {}
  /subscriptions/{account}/{name}/Rules:
    get: {}
  /subscriptions/{account}/{name}:
    get: {}
    post: {}
    put: {}
  /subscriptions/Name/{name}:
    get: {}

